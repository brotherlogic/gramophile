// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: organisation.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Sort int32

const (
	Sort_ARTIST_YEAR           Sort = 0
	Sort_LABEL_CATNO           Sort = 1
	Sort_RELEASE_YEAR          Sort = 2
	Sort_EARLIEST_RELEASE_YEAR Sort = 3
)

// Enum value maps for Sort.
var (
	Sort_name = map[int32]string{
		0: "ARTIST_YEAR",
		1: "LABEL_CATNO",
		2: "RELEASE_YEAR",
		3: "EARLIEST_RELEASE_YEAR",
	}
	Sort_value = map[string]int32{
		"ARTIST_YEAR":           0,
		"LABEL_CATNO":           1,
		"RELEASE_YEAR":          2,
		"EARLIEST_RELEASE_YEAR": 3,
	}
)

func (x Sort) Enum() *Sort {
	p := new(Sort)
	*p = x
	return p
}

func (x Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_organisation_proto_enumTypes[0].Descriptor()
}

func (Sort) Type() protoreflect.EnumType {
	return &file_organisation_proto_enumTypes[0]
}

func (x Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sort.Descriptor instead.
func (Sort) EnumDescriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{0}
}

type Layout int32

const (
	Layout_TIGHT Layout = 0
	Layout_LOOSE Layout = 1 // Currently unsupported
)

// Enum value maps for Layout.
var (
	Layout_name = map[int32]string{
		0: "TIGHT",
		1: "LOOSE",
	}
	Layout_value = map[string]int32{
		"TIGHT": 0,
		"LOOSE": 1,
	}
)

func (x Layout) Enum() *Layout {
	p := new(Layout)
	*p = x
	return p
}

func (x Layout) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Layout) Descriptor() protoreflect.EnumDescriptor {
	return file_organisation_proto_enumTypes[1].Descriptor()
}

func (Layout) Type() protoreflect.EnumType {
	return &file_organisation_proto_enumTypes[1]
}

func (x Layout) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Layout.Descriptor instead.
func (Layout) EnumDescriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{1}
}

type Density int32

const (
	Density_COUNT Density = 0
	Density_DISKS Density = 1
	Density_WIDTH Density = 2
)

// Enum value maps for Density.
var (
	Density_name = map[int32]string{
		0: "COUNT",
		1: "DISKS",
		2: "WIDTH",
	}
	Density_value = map[string]int32{
		"COUNT": 0,
		"DISKS": 1,
		"WIDTH": 2,
	}
)

func (x Density) Enum() *Density {
	p := new(Density)
	*p = x
	return p
}

func (x Density) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Density) Descriptor() protoreflect.EnumDescriptor {
	return file_organisation_proto_enumTypes[2].Descriptor()
}

func (Density) Type() protoreflect.EnumType {
	return &file_organisation_proto_enumTypes[2]
}

func (x Density) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Density.Descriptor instead.
func (Density) EnumDescriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{2}
}

type GroupSpill int32

const (
	GroupSpill_SPILL_NO_SPILL       GroupSpill = 0
	GroupSpill_SPILL_BREAK_ORDERING GroupSpill = 1
)

// Enum value maps for GroupSpill.
var (
	GroupSpill_name = map[int32]string{
		0: "SPILL_NO_SPILL",
		1: "SPILL_BREAK_ORDERING",
	}
	GroupSpill_value = map[string]int32{
		"SPILL_NO_SPILL":       0,
		"SPILL_BREAK_ORDERING": 1,
	}
)

func (x GroupSpill) Enum() *GroupSpill {
	p := new(GroupSpill)
	*p = x
	return p
}

func (x GroupSpill) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupSpill) Descriptor() protoreflect.EnumDescriptor {
	return file_organisation_proto_enumTypes[3].Descriptor()
}

func (GroupSpill) Type() protoreflect.EnumType {
	return &file_organisation_proto_enumTypes[3]
}

func (x GroupSpill) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupSpill.Descriptor instead.
func (GroupSpill) EnumDescriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{3}
}

type GroupingType int32

const (
	GroupingType_GROUPING_NO_GROUPING GroupingType = 0
	GroupingType_GROUPING_GROUP       GroupingType = 1
)

// Enum value maps for GroupingType.
var (
	GroupingType_name = map[int32]string{
		0: "GROUPING_NO_GROUPING",
		1: "GROUPING_GROUP",
	}
	GroupingType_value = map[string]int32{
		"GROUPING_NO_GROUPING": 0,
		"GROUPING_GROUP":       1,
	}
)

func (x GroupingType) Enum() *GroupingType {
	p := new(GroupingType)
	*p = x
	return p
}

func (x GroupingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupingType) Descriptor() protoreflect.EnumDescriptor {
	return file_organisation_proto_enumTypes[4].Descriptor()
}

func (GroupingType) Type() protoreflect.EnumType {
	return &file_organisation_proto_enumTypes[4]
}

func (x GroupingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupingType.Descriptor instead.
func (GroupingType) EnumDescriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{4}
}

type OrganisationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtistTranslation []*ArtistTranslation `protobuf:"bytes,1,rep,name=artist_translation,json=artistTranslation,proto3" json:"artist_translation,omitempty"`
	Organisations     []*Organisation      `protobuf:"bytes,2,rep,name=organisations,proto3" json:"organisations,omitempty"`
}

func (x *OrganisationConfig) Reset() {
	*x = OrganisationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganisationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganisationConfig) ProtoMessage() {}

func (x *OrganisationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_organisation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganisationConfig.ProtoReflect.Descriptor instead.
func (*OrganisationConfig) Descriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{0}
}

func (x *OrganisationConfig) GetArtistTranslation() []*ArtistTranslation {
	if x != nil {
		return x.ArtistTranslation
	}
	return nil
}

func (x *OrganisationConfig) GetOrganisations() []*Organisation {
	if x != nil {
		return x.Organisations
	}
	return nil
}

type OrganisationSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date       int64        `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	Placements []*Placement `protobuf:"bytes,2,rep,name=placements,proto3" json:"placements,omitempty"`
	Hash       string       `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Name       string       `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *OrganisationSnapshot) Reset() {
	*x = OrganisationSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrganisationSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganisationSnapshot) ProtoMessage() {}

func (x *OrganisationSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_organisation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganisationSnapshot.ProtoReflect.Descriptor instead.
func (*OrganisationSnapshot) Descriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{1}
}

func (x *OrganisationSnapshot) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *OrganisationSnapshot) GetPlacements() []*Placement {
	if x != nil {
		return x.Placements
	}
	return nil
}

func (x *OrganisationSnapshot) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *OrganisationSnapshot) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SnapshotDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Moves []*Move `protobuf:"bytes,1,rep,name=moves,proto3" json:"moves,omitempty"`
}

func (x *SnapshotDiff) Reset() {
	*x = SnapshotDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotDiff) ProtoMessage() {}

func (x *SnapshotDiff) ProtoReflect() protoreflect.Message {
	mi := &file_organisation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotDiff.ProtoReflect.Descriptor instead.
func (*SnapshotDiff) Descriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{2}
}

func (x *SnapshotDiff) GetMoves() []*Move {
	if x != nil {
		return x.Moves
	}
	return nil
}

type Move struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *Placement `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   *Placement `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Move) Reset() {
	*x = Move{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Move) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Move) ProtoMessage() {}

func (x *Move) ProtoReflect() protoreflect.Message {
	mi := &file_organisation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Move.ProtoReflect.Descriptor instead.
func (*Move) Descriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{3}
}

func (x *Move) GetStart() *Placement {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Move) GetEnd() *Placement {
	if x != nil {
		return x.End
	}
	return nil
}

type Placement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iid   int64   `protobuf:"varint,1,opt,name=iid,proto3" json:"iid,omitempty"`
	Unit  int32   `protobuf:"varint,2,opt,name=unit,proto3" json:"unit,omitempty"`
	Index int32   `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Space string  `protobuf:"bytes,4,opt,name=space,proto3" json:"space,omitempty"`
	Width float32 `protobuf:"fixed32,5,opt,name=width,proto3" json:"width,omitempty"`
	//Optional
	SortKey string `protobuf:"bytes,6,opt,name=sort_key,json=sortKey,proto3" json:"sort_key,omitempty"`
}

func (x *Placement) Reset() {
	*x = Placement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Placement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Placement) ProtoMessage() {}

func (x *Placement) ProtoReflect() protoreflect.Message {
	mi := &file_organisation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Placement.ProtoReflect.Descriptor instead.
func (*Placement) Descriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{4}
}

func (x *Placement) GetIid() int64 {
	if x != nil {
		return x.Iid
	}
	return 0
}

func (x *Placement) GetUnit() int32 {
	if x != nil {
		return x.Unit
	}
	return 0
}

func (x *Placement) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Placement) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *Placement) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Placement) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

type Organisation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string       `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Foldersets          []*FolderSet `protobuf:"bytes,1,rep,name=foldersets,proto3" json:"foldersets,omitempty"`
	Spaces              []*Space     `protobuf:"bytes,2,rep,name=spaces,proto3" json:"spaces,omitempty"`
	AutoArtistTranslate bool         `protobuf:"varint,5,opt,name=auto_artist_translate,json=autoArtistTranslate,proto3" json:"auto_artist_translate,omitempty"`
	Density             Density      `protobuf:"varint,3,opt,name=density,proto3,enum=gramophile.Density" json:"density,omitempty"`
	Grouping            *Grouping    `protobuf:"bytes,4,opt,name=grouping,proto3" json:"grouping,omitempty"`
	Spill               *Spill       `protobuf:"bytes,7,opt,name=spill,proto3" json:"spill,omitempty"`
}

func (x *Organisation) Reset() {
	*x = Organisation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Organisation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Organisation) ProtoMessage() {}

func (x *Organisation) ProtoReflect() protoreflect.Message {
	mi := &file_organisation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Organisation.ProtoReflect.Descriptor instead.
func (*Organisation) Descriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{5}
}

func (x *Organisation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Organisation) GetFoldersets() []*FolderSet {
	if x != nil {
		return x.Foldersets
	}
	return nil
}

func (x *Organisation) GetSpaces() []*Space {
	if x != nil {
		return x.Spaces
	}
	return nil
}

func (x *Organisation) GetAutoArtistTranslate() bool {
	if x != nil {
		return x.AutoArtistTranslate
	}
	return false
}

func (x *Organisation) GetDensity() Density {
	if x != nil {
		return x.Density
	}
	return Density_COUNT
}

func (x *Organisation) GetGrouping() *Grouping {
	if x != nil {
		return x.Grouping
	}
	return nil
}

func (x *Organisation) GetSpill() *Spill {
	if x != nil {
		return x.Spill
	}
	return nil
}

type Spill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type GroupSpill `protobuf:"varint,1,opt,name=type,proto3,enum=gramophile.GroupSpill" json:"type,omitempty"`
	// -1 means an infinite look ahead
	LookAhead int32 `protobuf:"varint,2,opt,name=look_ahead,json=lookAhead,proto3" json:"look_ahead,omitempty"`
}

func (x *Spill) Reset() {
	*x = Spill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spill) ProtoMessage() {}

func (x *Spill) ProtoReflect() protoreflect.Message {
	mi := &file_organisation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spill.ProtoReflect.Descriptor instead.
func (*Spill) Descriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{6}
}

func (x *Spill) GetType() GroupSpill {
	if x != nil {
		return x.Type
	}
	return GroupSpill_SPILL_NO_SPILL
}

func (x *Spill) GetLookAhead() int32 {
	if x != nil {
		return x.LookAhead
	}
	return 0
}

type LabelRanking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelName string  `protobuf:"bytes,1,opt,name=label_name,json=labelName,proto3" json:"label_name,omitempty"`
	Weighting float32 `protobuf:"fixed32,2,opt,name=weighting,proto3" json:"weighting,omitempty"`
}

func (x *LabelRanking) Reset() {
	*x = LabelRanking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelRanking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelRanking) ProtoMessage() {}

func (x *LabelRanking) ProtoReflect() protoreflect.Message {
	mi := &file_organisation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelRanking.ProtoReflect.Descriptor instead.
func (*LabelRanking) Descriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{7}
}

func (x *LabelRanking) GetLabelName() string {
	if x != nil {
		return x.LabelName
	}
	return ""
}

func (x *LabelRanking) GetWeighting() float32 {
	if x != nil {
		return x.Weighting
	}
	return 0
}

type ArtistMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderArtist    string   `protobuf:"bytes,1,opt,name=leader_artist,json=leaderArtist,proto3" json:"leader_artist,omitempty"`
	FollowingArtist []string `protobuf:"bytes,2,rep,name=following_artist,json=followingArtist,proto3" json:"following_artist,omitempty"`
}

func (x *ArtistMapping) Reset() {
	*x = ArtistMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistMapping) ProtoMessage() {}

func (x *ArtistMapping) ProtoReflect() protoreflect.Message {
	mi := &file_organisation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistMapping.ProtoReflect.Descriptor instead.
func (*ArtistMapping) Descriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{8}
}

func (x *ArtistMapping) GetLeaderArtist() string {
	if x != nil {
		return x.LeaderArtist
	}
	return ""
}

func (x *ArtistMapping) GetFollowingArtist() []string {
	if x != nil {
		return x.FollowingArtist
	}
	return nil
}

type Grouping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          GroupingType    `protobuf:"varint,1,opt,name=type,proto3,enum=gramophile.GroupingType" json:"type,omitempty"`
	ArtistWeights []*ArtistWeight `protobuf:"bytes,2,rep,name=artist_weights,json=artistWeights,proto3" json:"artist_weights,omitempty"`
	LabelWeights  []*LabelWeight  `protobuf:"bytes,3,rep,name=label_weights,json=labelWeights,proto3" json:"label_weights,omitempty"`
}

func (x *Grouping) Reset() {
	*x = Grouping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Grouping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Grouping) ProtoMessage() {}

func (x *Grouping) ProtoReflect() protoreflect.Message {
	mi := &file_organisation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Grouping.ProtoReflect.Descriptor instead.
func (*Grouping) Descriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{9}
}

func (x *Grouping) GetType() GroupingType {
	if x != nil {
		return x.Type
	}
	return GroupingType_GROUPING_NO_GROUPING
}

func (x *Grouping) GetArtistWeights() []*ArtistWeight {
	if x != nil {
		return x.ArtistWeights
	}
	return nil
}

func (x *Grouping) GetLabelWeights() []*LabelWeight {
	if x != nil {
		return x.LabelWeights
	}
	return nil
}

type LabelWeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelId int32   `protobuf:"varint,1,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	Weight  float32 `protobuf:"fixed32,2,opt,name=weight,proto3" json:"weight,omitempty"` // Default weight is 0.5
}

func (x *LabelWeight) Reset() {
	*x = LabelWeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelWeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelWeight) ProtoMessage() {}

func (x *LabelWeight) ProtoReflect() protoreflect.Message {
	mi := &file_organisation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelWeight.ProtoReflect.Descriptor instead.
func (*LabelWeight) Descriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{10}
}

func (x *LabelWeight) GetLabelId() int32 {
	if x != nil {
		return x.LabelId
	}
	return 0
}

func (x *LabelWeight) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type ArtistWeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtistId int32   `protobuf:"varint,1,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	Weight   float32 `protobuf:"fixed32,2,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *ArtistWeight) Reset() {
	*x = ArtistWeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistWeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistWeight) ProtoMessage() {}

func (x *ArtistWeight) ProtoReflect() protoreflect.Message {
	mi := &file_organisation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistWeight.ProtoReflect.Descriptor instead.
func (*ArtistWeight) Descriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{11}
}

func (x *ArtistWeight) GetArtistId() int32 {
	if x != nil {
		return x.ArtistId
	}
	return 0
}

func (x *ArtistWeight) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type Space struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Index  int32   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Units  int32   `protobuf:"varint,2,opt,name=units,proto3" json:"units,omitempty"`
	Width  float32 `protobuf:"fixed32,5,opt,name=width,proto3" json:"width,omitempty"`
	Layout Layout  `protobuf:"varint,7,opt,name=layout,proto3,enum=gramophile.Layout" json:"layout,omitempty"`
}

func (x *Space) Reset() {
	*x = Space{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Space) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Space) ProtoMessage() {}

func (x *Space) ProtoReflect() protoreflect.Message {
	mi := &file_organisation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Space.ProtoReflect.Descriptor instead.
func (*Space) Descriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{12}
}

func (x *Space) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Space) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Space) GetUnits() int32 {
	if x != nil {
		return x.Units
	}
	return 0
}

func (x *Space) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Space) GetLayout() Layout {
	if x != nil {
		return x.Layout
	}
	return Layout_TIGHT
}

type FolderSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Index  int32  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Folder int32  `protobuf:"varint,3,opt,name=folder,proto3" json:"folder,omitempty"`
	Sort   Sort   `protobuf:"varint,4,opt,name=sort,proto3,enum=gramophile.Sort" json:"sort,omitempty"`
}

func (x *FolderSet) Reset() {
	*x = FolderSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisation_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FolderSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderSet) ProtoMessage() {}

func (x *FolderSet) ProtoReflect() protoreflect.Message {
	mi := &file_organisation_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FolderSet.ProtoReflect.Descriptor instead.
func (*FolderSet) Descriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{13}
}

func (x *FolderSet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FolderSet) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *FolderSet) GetFolder() int32 {
	if x != nil {
		return x.Folder
	}
	return 0
}

func (x *FolderSet) GetSort() Sort {
	if x != nil {
		return x.Sort
	}
	return Sort_ARTIST_YEAR
}

type ArtistTranslation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtistPrefix  string `protobuf:"bytes,1,opt,name=artist_prefix,json=artistPrefix,proto3" json:"artist_prefix,omitempty"`
	OrderedArtist string `protobuf:"bytes,2,opt,name=ordered_artist,json=orderedArtist,proto3" json:"ordered_artist,omitempty"`
}

func (x *ArtistTranslation) Reset() {
	*x = ArtistTranslation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_organisation_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistTranslation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistTranslation) ProtoMessage() {}

func (x *ArtistTranslation) ProtoReflect() protoreflect.Message {
	mi := &file_organisation_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistTranslation.ProtoReflect.Descriptor instead.
func (*ArtistTranslation) Descriptor() ([]byte, []int) {
	return file_organisation_proto_rawDescGZIP(), []int{14}
}

func (x *ArtistTranslation) GetArtistPrefix() string {
	if x != nil {
		return x.ArtistPrefix
	}
	return ""
}

func (x *ArtistTranslation) GetOrderedArtist() string {
	if x != nil {
		return x.OrderedArtist
	}
	return ""
}

var File_organisation_proto protoreflect.FileDescriptor

var file_organisation_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65,
	0x22, 0xa2, 0x01, 0x0a, 0x12, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4c, 0x0a, 0x12, 0x61, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x11, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67,
	0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x14, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68,
	0x69, 0x6c, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x36, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x69, 0x66,
	0x66, 0x12, 0x26, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x4d, 0x6f,
	0x76, 0x65, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x04, 0x4d, 0x6f, 0x76,
	0x65, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x27,
	0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x72,
	0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xc2, 0x02, 0x0a, 0x0c, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a,
	0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x73, 0x65, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c,
	0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x06, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12,
	0x32, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13,
	0x61, 0x75, 0x74, 0x6f, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c,
	0x65, 0x2e, 0x44, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x52, 0x07, 0x64, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x79, 0x12, 0x30, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c,
	0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x70, 0x69, 0x6c, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65,
	0x2e, 0x53, 0x70, 0x69, 0x6c, 0x6c, 0x52, 0x05, 0x73, 0x70, 0x69, 0x6c, 0x6c, 0x22, 0x52, 0x0a,
	0x05, 0x53, 0x70, 0x69, 0x6c, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c,
	0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x69, 0x6c, 0x6c, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x6f, 0x6b, 0x5f, 0x61, 0x68, 0x65, 0x61, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x6f, 0x6b, 0x41, 0x68, 0x65, 0x61,
	0x64, 0x22, 0x4b, 0x0a, 0x0c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x5f,
	0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12,
	0x23, 0x0a, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x41, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x22,
	0xb7, 0x01, 0x0a, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x61,
	0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x61, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x0d, 0x61, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x0c, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0x40, 0x0a, 0x0b, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x43, 0x0a, 0x0c, 0x41,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x22, 0x89, 0x01, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x2a, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x4c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x22, 0x73, 0x0a, 0x09,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x61, 0x6d,
	0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x22, 0x5f, 0x0a, 0x11, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x25, 0x0a, 0x0e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x2a, 0x55, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x52,
	0x54, 0x49, 0x53, 0x54, 0x5f, 0x59, 0x45, 0x41, 0x52, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4c,
	0x41, 0x42, 0x45, 0x4c, 0x5f, 0x43, 0x41, 0x54, 0x4e, 0x4f, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x59, 0x45, 0x41, 0x52, 0x10, 0x02, 0x12, 0x19,
	0x0a, 0x15, 0x45, 0x41, 0x52, 0x4c, 0x49, 0x45, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41,
	0x53, 0x45, 0x5f, 0x59, 0x45, 0x41, 0x52, 0x10, 0x03, 0x2a, 0x1e, 0x0a, 0x06, 0x4c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x49, 0x47, 0x48, 0x54, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x4c, 0x4f, 0x4f, 0x53, 0x45, 0x10, 0x01, 0x2a, 0x2a, 0x0a, 0x07, 0x44, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x79, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x44, 0x49, 0x53, 0x4b, 0x53, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x49,
	0x44, 0x54, 0x48, 0x10, 0x02, 0x2a, 0x3a, 0x0a, 0x0a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70,
	0x69, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x50, 0x49, 0x4c, 0x4c, 0x5f, 0x4e, 0x4f, 0x5f,
	0x53, 0x50, 0x49, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x50, 0x49, 0x4c, 0x4c,
	0x5f, 0x42, 0x52, 0x45, 0x41, 0x4b, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x2a, 0x3c, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x4f,
	0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x01, 0x42,
	0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x67, 0x72, 0x61, 0x6d, 0x6f,
	0x70, 0x68, 0x69, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_organisation_proto_rawDescOnce sync.Once
	file_organisation_proto_rawDescData = file_organisation_proto_rawDesc
)

func file_organisation_proto_rawDescGZIP() []byte {
	file_organisation_proto_rawDescOnce.Do(func() {
		file_organisation_proto_rawDescData = protoimpl.X.CompressGZIP(file_organisation_proto_rawDescData)
	})
	return file_organisation_proto_rawDescData
}

var file_organisation_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_organisation_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_organisation_proto_goTypes = []interface{}{
	(Sort)(0),                    // 0: gramophile.Sort
	(Layout)(0),                  // 1: gramophile.Layout
	(Density)(0),                 // 2: gramophile.Density
	(GroupSpill)(0),              // 3: gramophile.GroupSpill
	(GroupingType)(0),            // 4: gramophile.GroupingType
	(*OrganisationConfig)(nil),   // 5: gramophile.OrganisationConfig
	(*OrganisationSnapshot)(nil), // 6: gramophile.OrganisationSnapshot
	(*SnapshotDiff)(nil),         // 7: gramophile.SnapshotDiff
	(*Move)(nil),                 // 8: gramophile.Move
	(*Placement)(nil),            // 9: gramophile.Placement
	(*Organisation)(nil),         // 10: gramophile.Organisation
	(*Spill)(nil),                // 11: gramophile.Spill
	(*LabelRanking)(nil),         // 12: gramophile.LabelRanking
	(*ArtistMapping)(nil),        // 13: gramophile.ArtistMapping
	(*Grouping)(nil),             // 14: gramophile.Grouping
	(*LabelWeight)(nil),          // 15: gramophile.LabelWeight
	(*ArtistWeight)(nil),         // 16: gramophile.ArtistWeight
	(*Space)(nil),                // 17: gramophile.Space
	(*FolderSet)(nil),            // 18: gramophile.FolderSet
	(*ArtistTranslation)(nil),    // 19: gramophile.ArtistTranslation
}
var file_organisation_proto_depIdxs = []int32{
	19, // 0: gramophile.OrganisationConfig.artist_translation:type_name -> gramophile.ArtistTranslation
	10, // 1: gramophile.OrganisationConfig.organisations:type_name -> gramophile.Organisation
	9,  // 2: gramophile.OrganisationSnapshot.placements:type_name -> gramophile.Placement
	8,  // 3: gramophile.SnapshotDiff.moves:type_name -> gramophile.Move
	9,  // 4: gramophile.Move.start:type_name -> gramophile.Placement
	9,  // 5: gramophile.Move.end:type_name -> gramophile.Placement
	18, // 6: gramophile.Organisation.foldersets:type_name -> gramophile.FolderSet
	17, // 7: gramophile.Organisation.spaces:type_name -> gramophile.Space
	2,  // 8: gramophile.Organisation.density:type_name -> gramophile.Density
	14, // 9: gramophile.Organisation.grouping:type_name -> gramophile.Grouping
	11, // 10: gramophile.Organisation.spill:type_name -> gramophile.Spill
	3,  // 11: gramophile.Spill.type:type_name -> gramophile.GroupSpill
	4,  // 12: gramophile.Grouping.type:type_name -> gramophile.GroupingType
	16, // 13: gramophile.Grouping.artist_weights:type_name -> gramophile.ArtistWeight
	15, // 14: gramophile.Grouping.label_weights:type_name -> gramophile.LabelWeight
	1,  // 15: gramophile.Space.layout:type_name -> gramophile.Layout
	0,  // 16: gramophile.FolderSet.sort:type_name -> gramophile.Sort
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_organisation_proto_init() }
func file_organisation_proto_init() {
	if File_organisation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_organisation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganisationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrganisationSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Move); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Placement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Organisation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelRanking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Grouping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelWeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistWeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Space); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisation_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FolderSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_organisation_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistTranslation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_organisation_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_organisation_proto_goTypes,
		DependencyIndexes: file_organisation_proto_depIdxs,
		EnumInfos:         file_organisation_proto_enumTypes,
		MessageInfos:      file_organisation_proto_msgTypes,
	}.Build()
	File_organisation_proto = out.File
	file_organisation_proto_rawDesc = nil
	file_organisation_proto_goTypes = nil
	file_organisation_proto_depIdxs = nil
}
