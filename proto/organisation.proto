syntax = "proto3";

package gramophile;

option go_package = "github.com/brotherlogic/gramophile/proto";

enum MissingWidthHandling {
    MISSING_WIDTH_IGNORE = 0;
    MISSING_WIDTH_AVERAGE = 1;
}

message OrganisationConfig {
    repeated ArtistTranslation artist_translation = 1;
    repeated Organisation organisations = 2;
    repeated LabelWeight label_ranking = 3;
}

message OrganisationSnapshot {
    int64 date = 1;
    repeated Placement placements = 2;
    string hash = 3;
    string name = 4;
}

message SnapshotDiff {
    repeated Move moves = 1;
}

message Move {
    Placement start = 1;
    Placement end = 2;
}

message Placement {
    int64 iid = 1;
    int32 unit = 2;
    int32 index = 3;
    string space = 4;
    float width = 5;

    // This is the unfiltered index
    int32 original_index = 7;
    string observations = 8;

    //Optional
    string sort_key = 6;
}

enum Sort {
    ARTIST_YEAR = 0;
    LABEL_CATNO = 1;
    RELEASE_YEAR = 2;
    EARLIEST_RELEASE_YEAR = 3;
    ADDITION_DATE = 4;
}

enum Layout {
    TIGHT = 0;
    LOOSE = 1; // Currently unsupported
}

enum Density {
    COUNT = 0;
    DISKS = 1;
    WIDTH = 2;
}

enum OrganisationUse {
    ORG_USE_UNKNOWN = 0;
    ORG_USE_LISTENING = 1;
}

message Organisation {
    string name = 6;

    repeated FolderSet foldersets = 1;
    repeated Space spaces = 2;

    bool auto_artist_translate = 5;
    Density density = 3;
    MissingWidthHandling missing_width_handling = 8;

    Grouping grouping = 4;
    Spill spill = 7;

    OrganisationUse use = 9;
}

message Spill {
    GroupSpill type = 1;

    // -1 means an infinite look ahead
    int32 look_ahead = 2;
}

enum GroupSpill {
    SPILL_NO_SPILL = 0;
    SPILL_BREAK_ORDERING = 1;
}


message ArtistMapping {
    string leader_artist = 1;
    repeated string following_artist = 2;
}

message Grouping {
    GroupingType type = 1;
    repeated ArtistWeight artist_weights = 2;
}

message LabelWeight {
    int32 label_id = 1;
    float weight = 2; // Default weight is 0.5
}

message ArtistWeight {
    int32 artist_id = 1;
    float weight = 2;
}

enum GroupingType {
    GROUPING_NO_GROUPING = 0;
    GROUPING_GROUP = 1; 
}

message Space {
    string name = 6;
    int32 index = 1;
    int32 units = 2;
    float width = 5;
    Layout layout = 7;
}

message FolderSet {
    string name = 1;
    int32 index = 2;
    int32 folder = 3;
    Sort sort = 4;
}


message ArtistTranslation {
    string artist_prefix = 1;
    string ordered_artist = 2;
}