// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: gramophile.proto

package proto

import (
	proto "github.com/brotherlogic/discogs/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WantlistType int32

const (
	WantlistType_EN_MASSE     WantlistType = 0
	WantlistType_ONE_BY_ONE   WantlistType = 1
	WantlistType_DATE_BOUNDED WantlistType = 2
)

// Enum value maps for WantlistType.
var (
	WantlistType_name = map[int32]string{
		0: "EN_MASSE",
		1: "ONE_BY_ONE",
		2: "DATE_BOUNDED",
	}
	WantlistType_value = map[string]int32{
		"EN_MASSE":     0,
		"ONE_BY_ONE":   1,
		"DATE_BOUNDED": 2,
	}
)

func (x WantlistType) Enum() *WantlistType {
	p := new(WantlistType)
	*p = x
	return p
}

func (x WantlistType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WantlistType) Descriptor() protoreflect.EnumDescriptor {
	return file_gramophile_proto_enumTypes[0].Descriptor()
}

func (WantlistType) Type() protoreflect.EnumType {
	return &file_gramophile_proto_enumTypes[0]
}

func (x WantlistType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WantlistType.Descriptor instead.
func (WantlistType) EnumDescriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{0}
}

type WantlistVisibility int32

const (
	WantlistVisibility_VISIBLE   WantlistVisibility = 0
	WantlistVisibility_INVISIBLE WantlistVisibility = 1
)

// Enum value maps for WantlistVisibility.
var (
	WantlistVisibility_name = map[int32]string{
		0: "VISIBLE",
		1: "INVISIBLE",
	}
	WantlistVisibility_value = map[string]int32{
		"VISIBLE":   0,
		"INVISIBLE": 1,
	}
)

func (x WantlistVisibility) Enum() *WantlistVisibility {
	p := new(WantlistVisibility)
	*p = x
	return p
}

func (x WantlistVisibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WantlistVisibility) Descriptor() protoreflect.EnumDescriptor {
	return file_gramophile_proto_enumTypes[1].Descriptor()
}

func (WantlistVisibility) Type() protoreflect.EnumType {
	return &file_gramophile_proto_enumTypes[1]
}

func (x WantlistVisibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WantlistVisibility.Descriptor instead.
func (WantlistVisibility) EnumDescriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{1}
}

type WantState int32

const (
	WantState_PENDING   WantState = 0
	WantState_RETIRED   WantState = 1
	WantState_PURCHASED WantState = 2
	WantState_WANTED    WantState = 3
	WantState_HIDDEN    WantState = 4
)

// Enum value maps for WantState.
var (
	WantState_name = map[int32]string{
		0: "PENDING",
		1: "RETIRED",
		2: "PURCHASED",
		3: "WANTED",
		4: "HIDDEN",
	}
	WantState_value = map[string]int32{
		"PENDING":   0,
		"RETIRED":   1,
		"PURCHASED": 2,
		"WANTED":    3,
		"HIDDEN":    4,
	}
)

func (x WantState) Enum() *WantState {
	p := new(WantState)
	*p = x
	return p
}

func (x WantState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WantState) Descriptor() protoreflect.EnumDescriptor {
	return file_gramophile_proto_enumTypes[2].Descriptor()
}

func (WantState) Type() protoreflect.EnumType {
	return &file_gramophile_proto_enumTypes[2]
}

func (x WantState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WantState.Descriptor instead.
func (WantState) EnumDescriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{2}
}

type NoncomplianceIssue int32

const (
	NoncomplianceIssue_NEEDS_CLEAN NoncomplianceIssue = 0
)

// Enum value maps for NoncomplianceIssue.
var (
	NoncomplianceIssue_name = map[int32]string{
		0: "NEEDS_CLEAN",
	}
	NoncomplianceIssue_value = map[string]int32{
		"NEEDS_CLEAN": 0,
	}
)

func (x NoncomplianceIssue) Enum() *NoncomplianceIssue {
	p := new(NoncomplianceIssue)
	*p = x
	return p
}

func (x NoncomplianceIssue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NoncomplianceIssue) Descriptor() protoreflect.EnumDescriptor {
	return file_gramophile_proto_enumTypes[3].Descriptor()
}

func (NoncomplianceIssue) Type() protoreflect.EnumType {
	return &file_gramophile_proto_enumTypes[3]
}

func (x NoncomplianceIssue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NoncomplianceIssue.Descriptor instead.
func (NoncomplianceIssue) EnumDescriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{3}
}

type KeepStatus int32

const (
	KeepStatus_KEEP_UNKNOWN KeepStatus = 0
	KeepStatus_NO_KEEP      KeepStatus = 1
	KeepStatus_DIGITAL_KEEP KeepStatus = 2
	KeepStatus_MINT_UP_KEEP KeepStatus = 3
	KeepStatus_KEEP         KeepStatus = 4
	KeepStatus_RESET        KeepStatus = 5
)

// Enum value maps for KeepStatus.
var (
	KeepStatus_name = map[int32]string{
		0: "KEEP_UNKNOWN",
		1: "NO_KEEP",
		2: "DIGITAL_KEEP",
		3: "MINT_UP_KEEP",
		4: "KEEP",
		5: "RESET",
	}
	KeepStatus_value = map[string]int32{
		"KEEP_UNKNOWN": 0,
		"NO_KEEP":      1,
		"DIGITAL_KEEP": 2,
		"MINT_UP_KEEP": 3,
		"KEEP":         4,
		"RESET":        5,
	}
)

func (x KeepStatus) Enum() *KeepStatus {
	p := new(KeepStatus)
	*p = x
	return p
}

func (x KeepStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeepStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gramophile_proto_enumTypes[4].Descriptor()
}

func (KeepStatus) Type() protoreflect.EnumType {
	return &file_gramophile_proto_enumTypes[4]
}

func (x KeepStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeepStatus.Descriptor instead.
func (KeepStatus) EnumDescriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{4}
}

type Wantlist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	StartDate  int64              `protobuf:"varint,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate    int64              `protobuf:"varint,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Type       WantlistType       `protobuf:"varint,4,opt,name=type,proto3,enum=gramophile.WantlistType" json:"type,omitempty"`
	Entries    []*WantlistEntry   `protobuf:"bytes,5,rep,name=entries,proto3" json:"entries,omitempty"`
	Visibility WantlistVisibility `protobuf:"varint,6,opt,name=visibility,proto3,enum=gramophile.WantlistVisibility" json:"visibility,omitempty"`
}

func (x *Wantlist) Reset() {
	*x = Wantlist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wantlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wantlist) ProtoMessage() {}

func (x *Wantlist) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wantlist.ProtoReflect.Descriptor instead.
func (*Wantlist) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{0}
}

func (x *Wantlist) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Wantlist) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *Wantlist) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *Wantlist) GetType() WantlistType {
	if x != nil {
		return x.Type
	}
	return WantlistType_EN_MASSE
}

func (x *Wantlist) GetEntries() []*WantlistEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *Wantlist) GetVisibility() WantlistVisibility {
	if x != nil {
		return x.Visibility
	}
	return WantlistVisibility_VISIBLE
}

type WantlistEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Artist      string    `protobuf:"bytes,2,opt,name=artist,proto3" json:"artist,omitempty"`
	Title       string    `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Index       int32     `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
	State       WantState `protobuf:"varint,5,opt,name=state,proto3,enum=gramophile.WantState" json:"state,omitempty"`
	DateEnabled int64     `protobuf:"varint,6,opt,name=date_enabled,json=dateEnabled,proto3" json:"date_enabled,omitempty"`
}

func (x *WantlistEntry) Reset() {
	*x = WantlistEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WantlistEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WantlistEntry) ProtoMessage() {}

func (x *WantlistEntry) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WantlistEntry.ProtoReflect.Descriptor instead.
func (*WantlistEntry) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{1}
}

func (x *WantlistEntry) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WantlistEntry) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *WantlistEntry) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *WantlistEntry) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *WantlistEntry) GetState() WantState {
	if x != nil {
		return x.State
	}
	return WantState_PENDING
}

func (x *WantlistEntry) GetDateEnabled() int64 {
	if x != nil {
		return x.DateEnabled
	}
	return 0
}

type Want struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	WantAddedDate int64     `protobuf:"varint,2,opt,name=want_added_date,json=wantAddedDate,proto3" json:"want_added_date,omitempty"`
	State         WantState `protobuf:"varint,3,opt,name=state,proto3,enum=gramophile.WantState" json:"state,omitempty"`
	SyncId        int64     `protobuf:"varint,4,opt,name=sync_id,json=syncId,proto3" json:"sync_id,omitempty"`
}

func (x *Want) Reset() {
	*x = Want{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Want) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Want) ProtoMessage() {}

func (x *Want) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Want.ProtoReflect.Descriptor instead.
func (*Want) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{2}
}

func (x *Want) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Want) GetWantAddedDate() int64 {
	if x != nil {
		return x.WantAddedDate
	}
	return 0
}

func (x *Want) GetState() WantState {
	if x != nil {
		return x.State
	}
	return WantState_PENDING
}

func (x *Want) GetSyncId() int64 {
	if x != nil {
		return x.SyncId
	}
	return 0
}

type RecordUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date        int64    `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	Before      *Record  `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	After       *Record  `protobuf:"bytes,3,opt,name=after,proto3" json:"after,omitempty"`
	Metadata    string   `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Explanation []string `protobuf:"bytes,4,rep,name=explanation,proto3" json:"explanation,omitempty"`
}

func (x *RecordUpdate) Reset() {
	*x = RecordUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordUpdate) ProtoMessage() {}

func (x *RecordUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordUpdate.ProtoReflect.Descriptor instead.
func (*RecordUpdate) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{3}
}

func (x *RecordUpdate) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *RecordUpdate) GetBefore() *Record {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *RecordUpdate) GetAfter() *Record {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *RecordUpdate) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *RecordUpdate) GetExplanation() []string {
	if x != nil {
		return x.Explanation
	}
	return nil
}

type Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Release            *proto.Release       `protobuf:"bytes,1,opt,name=release,proto3" json:"release,omitempty"`
	LastUpdateTime     int64                `protobuf:"varint,2,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	LastGoodConfigHash string               `protobuf:"bytes,3,opt,name=last_good_config_hash,json=lastGoodConfigHash,proto3" json:"last_good_config_hash,omitempty"`
	LastCleanTime      int64                `protobuf:"varint,4,opt,name=last_clean_time,json=lastCleanTime,proto3" json:"last_clean_time,omitempty"`
	LastListenTime     int64                `protobuf:"varint,7,opt,name=last_listen_time,json=lastListenTime,proto3" json:"last_listen_time,omitempty"`
	Weight             float32              `protobuf:"fixed32,10,opt,name=weight,proto3" json:"weight,omitempty"`
	Width              float32              `protobuf:"fixed32,9,opt,name=width,proto3" json:"width,omitempty"`
	NumPlays           int32                `protobuf:"varint,5,opt,name=num_plays,json=numPlays,proto3" json:"num_plays,omitempty"`
	Issues             []NoncomplianceIssue `protobuf:"varint,6,rep,packed,name=issues,proto3,enum=gramophile.NoncomplianceIssue" json:"issues,omitempty"`
	RefreshId          int64                `protobuf:"varint,11,opt,name=refresh_id,json=refreshId,proto3" json:"refresh_id,omitempty"`
	GoalFolder         string               `protobuf:"bytes,12,opt,name=goal_folder,json=goalFolder,proto3" json:"goal_folder,omitempty"`
	Sleeve             string               `protobuf:"bytes,13,opt,name=sleeve,proto3" json:"sleeve,omitempty"`
	Arrived            int64                `protobuf:"varint,14,opt,name=arrived,proto3" json:"arrived,omitempty"`
	MintSaleSuggestion float32              `protobuf:"fixed32,15,opt,name=mint_sale_suggestion,json=mintSaleSuggestion,proto3" json:"mint_sale_suggestion,omitempty"`
	// If set then we have an associated sale id
	SaleId                    int64        `protobuf:"varint,16,opt,name=sale_id,json=saleId,proto3" json:"sale_id,omitempty"`
	KeepStatus                KeepStatus   `protobuf:"varint,17,opt,name=keep_status,json=keepStatus,proto3,enum=gramophile.KeepStatus" json:"keep_status,omitempty"`
	MedianPrice               *proto.Price `protobuf:"bytes,18,opt,name=median_price,json=medianPrice,proto3" json:"median_price,omitempty"`
	LowPrice                  *proto.Price `protobuf:"bytes,21,opt,name=low_price,json=lowPrice,proto3" json:"low_price,omitempty"`
	EarliestReleaseDate       int64        `protobuf:"varint,19,opt,name=earliest_release_date,json=earliestReleaseDate,proto3" json:"earliest_release_date,omitempty"`
	LastEarliestReleaseUpdate int64        `protobuf:"varint,20,opt,name=last_earliest_release_update,json=lastEarliestReleaseUpdate,proto3" json:"last_earliest_release_update,omitempty"`
}

func (x *Record) Reset() {
	*x = Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{4}
}

func (x *Record) GetRelease() *proto.Release {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *Record) GetLastUpdateTime() int64 {
	if x != nil {
		return x.LastUpdateTime
	}
	return 0
}

func (x *Record) GetLastGoodConfigHash() string {
	if x != nil {
		return x.LastGoodConfigHash
	}
	return ""
}

func (x *Record) GetLastCleanTime() int64 {
	if x != nil {
		return x.LastCleanTime
	}
	return 0
}

func (x *Record) GetLastListenTime() int64 {
	if x != nil {
		return x.LastListenTime
	}
	return 0
}

func (x *Record) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Record) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Record) GetNumPlays() int32 {
	if x != nil {
		return x.NumPlays
	}
	return 0
}

func (x *Record) GetIssues() []NoncomplianceIssue {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *Record) GetRefreshId() int64 {
	if x != nil {
		return x.RefreshId
	}
	return 0
}

func (x *Record) GetGoalFolder() string {
	if x != nil {
		return x.GoalFolder
	}
	return ""
}

func (x *Record) GetSleeve() string {
	if x != nil {
		return x.Sleeve
	}
	return ""
}

func (x *Record) GetArrived() int64 {
	if x != nil {
		return x.Arrived
	}
	return 0
}

func (x *Record) GetMintSaleSuggestion() float32 {
	if x != nil {
		return x.MintSaleSuggestion
	}
	return 0
}

func (x *Record) GetSaleId() int64 {
	if x != nil {
		return x.SaleId
	}
	return 0
}

func (x *Record) GetKeepStatus() KeepStatus {
	if x != nil {
		return x.KeepStatus
	}
	return KeepStatus_KEEP_UNKNOWN
}

func (x *Record) GetMedianPrice() *proto.Price {
	if x != nil {
		return x.MedianPrice
	}
	return nil
}

func (x *Record) GetLowPrice() *proto.Price {
	if x != nil {
		return x.LowPrice
	}
	return nil
}

func (x *Record) GetEarliestReleaseDate() int64 {
	if x != nil {
		return x.EarliestReleaseDate
	}
	return 0
}

func (x *Record) GetLastEarliestReleaseUpdate() int64 {
	if x != nil {
		return x.LastEarliestReleaseUpdate
	}
	return 0
}

type SaleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SaleId          int64            `protobuf:"varint,1,opt,name=sale_id,json=saleId,proto3" json:"sale_id,omitempty"`
	LastPriceUpdate int64            `protobuf:"varint,2,opt,name=last_price_update,json=lastPriceUpdate,proto3" json:"last_price_update,omitempty"`
	SaleState       proto.SaleStatus `protobuf:"varint,3,opt,name=sale_state,json=saleState,proto3,enum=discogs.SaleStatus" json:"sale_state,omitempty"`
	RefreshId       int64            `protobuf:"varint,4,opt,name=refresh_id,json=refreshId,proto3" json:"refresh_id,omitempty"`
	ReleaseId       int64            `protobuf:"varint,5,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	CurrentPrice    *proto.Price     `protobuf:"bytes,6,opt,name=current_price,json=currentPrice,proto3" json:"current_price,omitempty"`
	Condition       string           `protobuf:"bytes,7,opt,name=condition,proto3" json:"condition,omitempty"`
	ListedDate      int64            `protobuf:"varint,8,opt,name=listed_date,json=listedDate,proto3" json:"listed_date,omitempty"`
	InitialPrice    *proto.Price     `protobuf:"bytes,9,opt,name=initial_price,json=initialPrice,proto3" json:"initial_price,omitempty"`
	MedianPrice     *proto.Price     `protobuf:"bytes,10,opt,name=median_price,json=medianPrice,proto3" json:"median_price,omitempty"`
	LowPrice        *proto.Price     `protobuf:"bytes,13,opt,name=low_price,json=lowPrice,proto3" json:"low_price,omitempty"`
	Updates         []*PriceUpdate   `protobuf:"bytes,11,rep,name=updates,proto3" json:"updates,omitempty"`
	TimeAtMedian    int64            `protobuf:"varint,12,opt,name=time_at_median,json=timeAtMedian,proto3" json:"time_at_median,omitempty"`
	TimeCreated     int64            `protobuf:"varint,14,opt,name=time_created,json=timeCreated,proto3" json:"time_created,omitempty"`
	TimeRefreshed   int64            `protobuf:"varint,15,opt,name=time_refreshed,json=timeRefreshed,proto3" json:"time_refreshed,omitempty"`
}

func (x *SaleInfo) Reset() {
	*x = SaleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaleInfo) ProtoMessage() {}

func (x *SaleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaleInfo.ProtoReflect.Descriptor instead.
func (*SaleInfo) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{5}
}

func (x *SaleInfo) GetSaleId() int64 {
	if x != nil {
		return x.SaleId
	}
	return 0
}

func (x *SaleInfo) GetLastPriceUpdate() int64 {
	if x != nil {
		return x.LastPriceUpdate
	}
	return 0
}

func (x *SaleInfo) GetSaleState() proto.SaleStatus {
	if x != nil {
		return x.SaleState
	}
	return proto.SaleStatus(0)
}

func (x *SaleInfo) GetRefreshId() int64 {
	if x != nil {
		return x.RefreshId
	}
	return 0
}

func (x *SaleInfo) GetReleaseId() int64 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

func (x *SaleInfo) GetCurrentPrice() *proto.Price {
	if x != nil {
		return x.CurrentPrice
	}
	return nil
}

func (x *SaleInfo) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *SaleInfo) GetListedDate() int64 {
	if x != nil {
		return x.ListedDate
	}
	return 0
}

func (x *SaleInfo) GetInitialPrice() *proto.Price {
	if x != nil {
		return x.InitialPrice
	}
	return nil
}

func (x *SaleInfo) GetMedianPrice() *proto.Price {
	if x != nil {
		return x.MedianPrice
	}
	return nil
}

func (x *SaleInfo) GetLowPrice() *proto.Price {
	if x != nil {
		return x.LowPrice
	}
	return nil
}

func (x *SaleInfo) GetUpdates() []*PriceUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *SaleInfo) GetTimeAtMedian() int64 {
	if x != nil {
		return x.TimeAtMedian
	}
	return 0
}

func (x *SaleInfo) GetTimeCreated() int64 {
	if x != nil {
		return x.TimeCreated
	}
	return 0
}

func (x *SaleInfo) GetTimeRefreshed() int64 {
	if x != nil {
		return x.TimeRefreshed
	}
	return 0
}

type PriceUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date     int64        `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	SetPrice *proto.Price `protobuf:"bytes,2,opt,name=set_price,json=setPrice,proto3" json:"set_price,omitempty"`
}

func (x *PriceUpdate) Reset() {
	*x = PriceUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceUpdate) ProtoMessage() {}

func (x *PriceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceUpdate.ProtoReflect.Descriptor instead.
func (*PriceUpdate) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{6}
}

func (x *PriceUpdate) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *PriceUpdate) GetSetPrice() *proto.Price {
	if x != nil {
		return x.SetPrice
	}
	return nil
}

type Intent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CleanTime  int64      `protobuf:"varint,1,opt,name=clean_time,json=cleanTime,proto3" json:"clean_time,omitempty"`
	ListenTime int64      `protobuf:"varint,2,opt,name=listen_time,json=listenTime,proto3" json:"listen_time,omitempty"`
	Width      float32    `protobuf:"fixed32,3,opt,name=width,proto3" json:"width,omitempty"`
	Weight     float32    `protobuf:"fixed32,4,opt,name=weight,proto3" json:"weight,omitempty"`
	GoalFolder string     `protobuf:"bytes,5,opt,name=goal_folder,json=goalFolder,proto3" json:"goal_folder,omitempty"`
	Sleeve     string     `protobuf:"bytes,6,opt,name=sleeve,proto3" json:"sleeve,omitempty"`
	Arrived    int64      `protobuf:"varint,7,opt,name=arrived,proto3" json:"arrived,omitempty"`
	Keep       KeepStatus `protobuf:"varint,8,opt,name=keep,proto3,enum=gramophile.KeepStatus" json:"keep,omitempty"`
	NewScore   int32      `protobuf:"varint,9,opt,name=new_score,json=newScore,proto3" json:"new_score,omitempty"`
}

func (x *Intent) Reset() {
	*x = Intent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Intent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Intent) ProtoMessage() {}

func (x *Intent) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Intent.ProtoReflect.Descriptor instead.
func (*Intent) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{7}
}

func (x *Intent) GetCleanTime() int64 {
	if x != nil {
		return x.CleanTime
	}
	return 0
}

func (x *Intent) GetListenTime() int64 {
	if x != nil {
		return x.ListenTime
	}
	return 0
}

func (x *Intent) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Intent) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Intent) GetGoalFolder() string {
	if x != nil {
		return x.GoalFolder
	}
	return ""
}

func (x *Intent) GetSleeve() string {
	if x != nil {
		return x.Sleeve
	}
	return ""
}

func (x *Intent) GetArrived() int64 {
	if x != nil {
		return x.Arrived
	}
	return 0
}

func (x *Intent) GetKeep() KeepStatus {
	if x != nil {
		return x.Keep
	}
	return KeepStatus_KEEP_UNKNOWN
}

func (x *Intent) GetNewScore() int32 {
	if x != nil {
		return x.NewScore
	}
	return 0
}

type Queues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queues []*Queue `protobuf:"bytes,1,rep,name=queues,proto3" json:"queues,omitempty"`
}

func (x *Queues) Reset() {
	*x = Queues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Queues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Queues) ProtoMessage() {}

func (x *Queues) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Queues.ProtoReflect.Descriptor instead.
func (*Queues) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{8}
}

func (x *Queues) GetQueues() []*Queue {
	if x != nil {
		return x.Queues
	}
	return nil
}

type Queue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Elements []*QueueElement `protobuf:"bytes,2,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *Queue) Reset() {
	*x = Queue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Queue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Queue) ProtoMessage() {}

func (x *Queue) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Queue.ProtoReflect.Descriptor instead.
func (*Queue) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{9}
}

func (x *Queue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Queue) GetElements() []*QueueElement {
	if x != nil {
		return x.Elements
	}
	return nil
}

type QueueElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunDate          int64  `protobuf:"varint,1,opt,name=run_date,json=runDate,proto3" json:"run_date,omitempty"`
	Auth             string `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	BackoffInSeconds int32  `protobuf:"varint,3,opt,name=backoff_in_seconds,json=backoffInSeconds,proto3" json:"backoff_in_seconds,omitempty"`
	// Types that are assignable to Entry:
	//	*QueueElement_RefreshUser
	//	*QueueElement_RefreshCollectionEntry
	//	*QueueElement_RefreshIntents
	//	*QueueElement_RefreshUpdates
	//	*QueueElement_AddFolderUpdate
	//	*QueueElement_RefreshSales
	//	*QueueElement_LinkSales
	//	*QueueElement_RefreshWantlists
	//	*QueueElement_AddWant
	//	*QueueElement_RefreshWants
	//	*QueueElement_UpdateSale
	//	*QueueElement_MoveRecords
	//	*QueueElement_MoveRecord
	//	*QueueElement_RefreshRelease
	//	*QueueElement_RefreshCollection
	//	*QueueElement_RefreshEarliestReleaseDates
	//	*QueueElement_RefreshEarliestReleaseDate
	//	*QueueElement_SyncWants
	//	*QueueElement_RefreshWant
	Entry     isQueueElement_Entry `protobuf_oneof:"entry"`
	RefreshId int64                `protobuf:"varint,7,opt,name=refresh_id,json=refreshId,proto3" json:"refresh_id,omitempty"`
}

func (x *QueueElement) Reset() {
	*x = QueueElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueElement) ProtoMessage() {}

func (x *QueueElement) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueElement.ProtoReflect.Descriptor instead.
func (*QueueElement) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{10}
}

func (x *QueueElement) GetRunDate() int64 {
	if x != nil {
		return x.RunDate
	}
	return 0
}

func (x *QueueElement) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

func (x *QueueElement) GetBackoffInSeconds() int32 {
	if x != nil {
		return x.BackoffInSeconds
	}
	return 0
}

func (m *QueueElement) GetEntry() isQueueElement_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (x *QueueElement) GetRefreshUser() *RefreshUserEntry {
	if x, ok := x.GetEntry().(*QueueElement_RefreshUser); ok {
		return x.RefreshUser
	}
	return nil
}

func (x *QueueElement) GetRefreshCollectionEntry() *RefreshCollectionEntry {
	if x, ok := x.GetEntry().(*QueueElement_RefreshCollectionEntry); ok {
		return x.RefreshCollectionEntry
	}
	return nil
}

func (x *QueueElement) GetRefreshIntents() *RefreshIntents {
	if x, ok := x.GetEntry().(*QueueElement_RefreshIntents); ok {
		return x.RefreshIntents
	}
	return nil
}

func (x *QueueElement) GetRefreshUpdates() *RefreshUpdates {
	if x, ok := x.GetEntry().(*QueueElement_RefreshUpdates); ok {
		return x.RefreshUpdates
	}
	return nil
}

func (x *QueueElement) GetAddFolderUpdate() *AddFolderUpdate {
	if x, ok := x.GetEntry().(*QueueElement_AddFolderUpdate); ok {
		return x.AddFolderUpdate
	}
	return nil
}

func (x *QueueElement) GetRefreshSales() *RefreshSales {
	if x, ok := x.GetEntry().(*QueueElement_RefreshSales); ok {
		return x.RefreshSales
	}
	return nil
}

func (x *QueueElement) GetLinkSales() *LinkSales {
	if x, ok := x.GetEntry().(*QueueElement_LinkSales); ok {
		return x.LinkSales
	}
	return nil
}

func (x *QueueElement) GetRefreshWantlists() *RefreshWantlists {
	if x, ok := x.GetEntry().(*QueueElement_RefreshWantlists); ok {
		return x.RefreshWantlists
	}
	return nil
}

func (x *QueueElement) GetAddWant() *AddWant {
	if x, ok := x.GetEntry().(*QueueElement_AddWant); ok {
		return x.AddWant
	}
	return nil
}

func (x *QueueElement) GetRefreshWants() *RefreshWants {
	if x, ok := x.GetEntry().(*QueueElement_RefreshWants); ok {
		return x.RefreshWants
	}
	return nil
}

func (x *QueueElement) GetUpdateSale() *UpdateSale {
	if x, ok := x.GetEntry().(*QueueElement_UpdateSale); ok {
		return x.UpdateSale
	}
	return nil
}

func (x *QueueElement) GetMoveRecords() *MoveRecords {
	if x, ok := x.GetEntry().(*QueueElement_MoveRecords); ok {
		return x.MoveRecords
	}
	return nil
}

func (x *QueueElement) GetMoveRecord() *MoveRecord {
	if x, ok := x.GetEntry().(*QueueElement_MoveRecord); ok {
		return x.MoveRecord
	}
	return nil
}

func (x *QueueElement) GetRefreshRelease() *RefreshRelease {
	if x, ok := x.GetEntry().(*QueueElement_RefreshRelease); ok {
		return x.RefreshRelease
	}
	return nil
}

func (x *QueueElement) GetRefreshCollection() *RefreshCollection {
	if x, ok := x.GetEntry().(*QueueElement_RefreshCollection); ok {
		return x.RefreshCollection
	}
	return nil
}

func (x *QueueElement) GetRefreshEarliestReleaseDates() *RefreshEarliestReleaseDates {
	if x, ok := x.GetEntry().(*QueueElement_RefreshEarliestReleaseDates); ok {
		return x.RefreshEarliestReleaseDates
	}
	return nil
}

func (x *QueueElement) GetRefreshEarliestReleaseDate() *RefreshEarliestReleaseDate {
	if x, ok := x.GetEntry().(*QueueElement_RefreshEarliestReleaseDate); ok {
		return x.RefreshEarliestReleaseDate
	}
	return nil
}

func (x *QueueElement) GetSyncWants() *SyncWants {
	if x, ok := x.GetEntry().(*QueueElement_SyncWants); ok {
		return x.SyncWants
	}
	return nil
}

func (x *QueueElement) GetRefreshWant() *RefreshWant {
	if x, ok := x.GetEntry().(*QueueElement_RefreshWant); ok {
		return x.RefreshWant
	}
	return nil
}

func (x *QueueElement) GetRefreshId() int64 {
	if x != nil {
		return x.RefreshId
	}
	return 0
}

type isQueueElement_Entry interface {
	isQueueElement_Entry()
}

type QueueElement_RefreshUser struct {
	RefreshUser *RefreshUserEntry `protobuf:"bytes,4,opt,name=refresh_user,json=refreshUser,proto3,oneof"`
}

type QueueElement_RefreshCollectionEntry struct {
	RefreshCollectionEntry *RefreshCollectionEntry `protobuf:"bytes,5,opt,name=refresh_collection_entry,json=refreshCollectionEntry,proto3,oneof"`
}

type QueueElement_RefreshIntents struct {
	RefreshIntents *RefreshIntents `protobuf:"bytes,6,opt,name=refresh_intents,json=refreshIntents,proto3,oneof"`
}

type QueueElement_RefreshUpdates struct {
	RefreshUpdates *RefreshUpdates `protobuf:"bytes,8,opt,name=refresh_updates,json=refreshUpdates,proto3,oneof"`
}

type QueueElement_AddFolderUpdate struct {
	AddFolderUpdate *AddFolderUpdate `protobuf:"bytes,9,opt,name=add_folder_update,json=addFolderUpdate,proto3,oneof"`
}

type QueueElement_RefreshSales struct {
	RefreshSales *RefreshSales `protobuf:"bytes,10,opt,name=refresh_sales,json=refreshSales,proto3,oneof"`
}

type QueueElement_LinkSales struct {
	LinkSales *LinkSales `protobuf:"bytes,11,opt,name=link_sales,json=linkSales,proto3,oneof"`
}

type QueueElement_RefreshWantlists struct {
	RefreshWantlists *RefreshWantlists `protobuf:"bytes,12,opt,name=refresh_wantlists,json=refreshWantlists,proto3,oneof"`
}

type QueueElement_AddWant struct {
	AddWant *AddWant `protobuf:"bytes,13,opt,name=add_want,json=addWant,proto3,oneof"`
}

type QueueElement_RefreshWants struct {
	RefreshWants *RefreshWants `protobuf:"bytes,14,opt,name=refresh_wants,json=refreshWants,proto3,oneof"`
}

type QueueElement_UpdateSale struct {
	UpdateSale *UpdateSale `protobuf:"bytes,15,opt,name=update_sale,json=updateSale,proto3,oneof"`
}

type QueueElement_MoveRecords struct {
	MoveRecords *MoveRecords `protobuf:"bytes,16,opt,name=move_records,json=moveRecords,proto3,oneof"`
}

type QueueElement_MoveRecord struct {
	MoveRecord *MoveRecord `protobuf:"bytes,17,opt,name=move_record,json=moveRecord,proto3,oneof"`
}

type QueueElement_RefreshRelease struct {
	RefreshRelease *RefreshRelease `protobuf:"bytes,18,opt,name=refresh_release,json=refreshRelease,proto3,oneof"`
}

type QueueElement_RefreshCollection struct {
	RefreshCollection *RefreshCollection `protobuf:"bytes,19,opt,name=refresh_collection,json=refreshCollection,proto3,oneof"`
}

type QueueElement_RefreshEarliestReleaseDates struct {
	RefreshEarliestReleaseDates *RefreshEarliestReleaseDates `protobuf:"bytes,20,opt,name=refresh_earliest_release_dates,json=refreshEarliestReleaseDates,proto3,oneof"`
}

type QueueElement_RefreshEarliestReleaseDate struct {
	RefreshEarliestReleaseDate *RefreshEarliestReleaseDate `protobuf:"bytes,21,opt,name=refresh_earliest_release_date,json=refreshEarliestReleaseDate,proto3,oneof"`
}

type QueueElement_SyncWants struct {
	SyncWants *SyncWants `protobuf:"bytes,22,opt,name=sync_wants,json=syncWants,proto3,oneof"`
}

type QueueElement_RefreshWant struct {
	RefreshWant *RefreshWant `protobuf:"bytes,23,opt,name=refresh_want,json=refreshWant,proto3,oneof"`
}

func (*QueueElement_RefreshUser) isQueueElement_Entry() {}

func (*QueueElement_RefreshCollectionEntry) isQueueElement_Entry() {}

func (*QueueElement_RefreshIntents) isQueueElement_Entry() {}

func (*QueueElement_RefreshUpdates) isQueueElement_Entry() {}

func (*QueueElement_AddFolderUpdate) isQueueElement_Entry() {}

func (*QueueElement_RefreshSales) isQueueElement_Entry() {}

func (*QueueElement_LinkSales) isQueueElement_Entry() {}

func (*QueueElement_RefreshWantlists) isQueueElement_Entry() {}

func (*QueueElement_AddWant) isQueueElement_Entry() {}

func (*QueueElement_RefreshWants) isQueueElement_Entry() {}

func (*QueueElement_UpdateSale) isQueueElement_Entry() {}

func (*QueueElement_MoveRecords) isQueueElement_Entry() {}

func (*QueueElement_MoveRecord) isQueueElement_Entry() {}

func (*QueueElement_RefreshRelease) isQueueElement_Entry() {}

func (*QueueElement_RefreshCollection) isQueueElement_Entry() {}

func (*QueueElement_RefreshEarliestReleaseDates) isQueueElement_Entry() {}

func (*QueueElement_RefreshEarliestReleaseDate) isQueueElement_Entry() {}

func (*QueueElement_SyncWants) isQueueElement_Entry() {}

func (*QueueElement_RefreshWant) isQueueElement_Entry() {}

type RefreshWant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WantId int64 `protobuf:"varint,1,opt,name=want_id,json=wantId,proto3" json:"want_id,omitempty"`
}

func (x *RefreshWant) Reset() {
	*x = RefreshWant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshWant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshWant) ProtoMessage() {}

func (x *RefreshWant) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshWant.ProtoReflect.Descriptor instead.
func (*RefreshWant) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{11}
}

func (x *RefreshWant) GetWantId() int64 {
	if x != nil {
		return x.WantId
	}
	return 0
}

type SyncWants struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	RefreshId int64 `protobuf:"varint,2,opt,name=refresh_id,json=refreshId,proto3" json:"refresh_id,omitempty"`
}

func (x *SyncWants) Reset() {
	*x = SyncWants{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncWants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncWants) ProtoMessage() {}

func (x *SyncWants) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncWants.ProtoReflect.Descriptor instead.
func (*SyncWants) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{12}
}

func (x *SyncWants) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SyncWants) GetRefreshId() int64 {
	if x != nil {
		return x.RefreshId
	}
	return 0
}

type RefreshEarliestReleaseDates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iid      int64 `protobuf:"varint,1,opt,name=iid,proto3" json:"iid,omitempty"`
	MasterId int64 `protobuf:"varint,2,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"`
}

func (x *RefreshEarliestReleaseDates) Reset() {
	*x = RefreshEarliestReleaseDates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshEarliestReleaseDates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshEarliestReleaseDates) ProtoMessage() {}

func (x *RefreshEarliestReleaseDates) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshEarliestReleaseDates.ProtoReflect.Descriptor instead.
func (*RefreshEarliestReleaseDates) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{13}
}

func (x *RefreshEarliestReleaseDates) GetIid() int64 {
	if x != nil {
		return x.Iid
	}
	return 0
}

func (x *RefreshEarliestReleaseDates) GetMasterId() int64 {
	if x != nil {
		return x.MasterId
	}
	return 0
}

type RefreshEarliestReleaseDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iid          int64 `protobuf:"varint,1,opt,name=iid,proto3" json:"iid,omitempty"`
	OtherRelease int64 `protobuf:"varint,2,opt,name=other_release,json=otherRelease,proto3" json:"other_release,omitempty"`
}

func (x *RefreshEarliestReleaseDate) Reset() {
	*x = RefreshEarliestReleaseDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshEarliestReleaseDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshEarliestReleaseDate) ProtoMessage() {}

func (x *RefreshEarliestReleaseDate) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshEarliestReleaseDate.ProtoReflect.Descriptor instead.
func (*RefreshEarliestReleaseDate) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{14}
}

func (x *RefreshEarliestReleaseDate) GetIid() int64 {
	if x != nil {
		return x.Iid
	}
	return 0
}

func (x *RefreshEarliestReleaseDate) GetOtherRelease() int64 {
	if x != nil {
		return x.OtherRelease
	}
	return 0
}

type RefreshCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshCollection) Reset() {
	*x = RefreshCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshCollection) ProtoMessage() {}

func (x *RefreshCollection) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshCollection.ProtoReflect.Descriptor instead.
func (*RefreshCollection) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{15}
}

type RefreshRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iid int64 `protobuf:"varint,1,opt,name=iid,proto3" json:"iid,omitempty"`
}

func (x *RefreshRelease) Reset() {
	*x = RefreshRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshRelease) ProtoMessage() {}

func (x *RefreshRelease) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshRelease.ProtoReflect.Descriptor instead.
func (*RefreshRelease) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{16}
}

func (x *RefreshRelease) GetIid() int64 {
	if x != nil {
		return x.Iid
	}
	return 0
}

type UpdateSale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SaleId    int64  `protobuf:"varint,1,opt,name=sale_id,json=saleId,proto3" json:"sale_id,omitempty"`
	NewPrice  int32  `protobuf:"varint,2,opt,name=new_price,json=newPrice,proto3" json:"new_price,omitempty"`
	ReleaseId int64  `protobuf:"varint,3,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	Condition string `protobuf:"bytes,4,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *UpdateSale) Reset() {
	*x = UpdateSale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSale) ProtoMessage() {}

func (x *UpdateSale) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSale.ProtoReflect.Descriptor instead.
func (*UpdateSale) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateSale) GetSaleId() int64 {
	if x != nil {
		return x.SaleId
	}
	return 0
}

func (x *UpdateSale) GetNewPrice() int32 {
	if x != nil {
		return x.NewPrice
	}
	return 0
}

func (x *UpdateSale) GetReleaseId() int64 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

func (x *UpdateSale) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type MoveRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordIid  int64  `protobuf:"varint,1,opt,name=recordIid,proto3" json:"recordIid,omitempty"`
	MoveFolder string `protobuf:"bytes,2,opt,name=move_folder,json=moveFolder,proto3" json:"move_folder,omitempty"`
	Rule       string `protobuf:"bytes,3,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *MoveRecord) Reset() {
	*x = MoveRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRecord) ProtoMessage() {}

func (x *MoveRecord) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRecord.ProtoReflect.Descriptor instead.
func (*MoveRecord) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{18}
}

func (x *MoveRecord) GetRecordIid() int64 {
	if x != nil {
		return x.RecordIid
	}
	return 0
}

func (x *MoveRecord) GetMoveFolder() string {
	if x != nil {
		return x.MoveFolder
	}
	return ""
}

func (x *MoveRecord) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

type MoveRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MoveRecords) Reset() {
	*x = MoveRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRecords) ProtoMessage() {}

func (x *MoveRecords) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRecords.ProtoReflect.Descriptor instead.
func (*MoveRecords) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{19}
}

type RefreshWants struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshWants) Reset() {
	*x = RefreshWants{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshWants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshWants) ProtoMessage() {}

func (x *RefreshWants) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshWants.ProtoReflect.Descriptor instead.
func (*RefreshWants) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{20}
}

type AddWant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddWant) Reset() {
	*x = AddWant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWant) ProtoMessage() {}

func (x *AddWant) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWant.ProtoReflect.Descriptor instead.
func (*AddWant) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{21}
}

func (x *AddWant) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RefreshWantlists struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshWantlists) Reset() {
	*x = RefreshWantlists{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshWantlists) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshWantlists) ProtoMessage() {}

func (x *RefreshWantlists) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshWantlists.ProtoReflect.Descriptor instead.
func (*RefreshWantlists) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{22}
}

type LinkSales struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshId int64 `protobuf:"varint,1,opt,name=refresh_id,json=refreshId,proto3" json:"refresh_id,omitempty"`
}

func (x *LinkSales) Reset() {
	*x = LinkSales{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkSales) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkSales) ProtoMessage() {}

func (x *LinkSales) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkSales.ProtoReflect.Descriptor instead.
func (*LinkSales) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{23}
}

func (x *LinkSales) GetRefreshId() int64 {
	if x != nil {
		return x.RefreshId
	}
	return 0
}

type RefreshSales struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	RefreshId int64 `protobuf:"varint,2,opt,name=refresh_id,json=refreshId,proto3" json:"refresh_id,omitempty"`
}

func (x *RefreshSales) Reset() {
	*x = RefreshSales{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshSales) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshSales) ProtoMessage() {}

func (x *RefreshSales) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshSales.ProtoReflect.Descriptor instead.
func (*RefreshSales) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{24}
}

func (x *RefreshSales) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RefreshSales) GetRefreshId() int64 {
	if x != nil {
		return x.RefreshId
	}
	return 0
}

type AddFolderUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FolderName string `protobuf:"bytes,1,opt,name=folder_name,json=folderName,proto3" json:"folder_name,omitempty"`
}

func (x *AddFolderUpdate) Reset() {
	*x = AddFolderUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFolderUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFolderUpdate) ProtoMessage() {}

func (x *AddFolderUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFolderUpdate.ProtoReflect.Descriptor instead.
func (*AddFolderUpdate) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{25}
}

func (x *AddFolderUpdate) GetFolderName() string {
	if x != nil {
		return x.FolderName
	}
	return ""
}

type RefreshUpdates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshUpdates) Reset() {
	*x = RefreshUpdates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshUpdates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshUpdates) ProtoMessage() {}

func (x *RefreshUpdates) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshUpdates.ProtoReflect.Descriptor instead.
func (*RefreshUpdates) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{26}
}

type RefreshUserEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth string `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *RefreshUserEntry) Reset() {
	*x = RefreshUserEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshUserEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshUserEntry) ProtoMessage() {}

func (x *RefreshUserEntry) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshUserEntry.ProtoReflect.Descriptor instead.
func (*RefreshUserEntry) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{27}
}

func (x *RefreshUserEntry) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

type RefreshCollectionEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	RefreshId int64 `protobuf:"varint,2,opt,name=refresh_id,json=refreshId,proto3" json:"refresh_id,omitempty"`
}

func (x *RefreshCollectionEntry) Reset() {
	*x = RefreshCollectionEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshCollectionEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshCollectionEntry) ProtoMessage() {}

func (x *RefreshCollectionEntry) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshCollectionEntry.ProtoReflect.Descriptor instead.
func (*RefreshCollectionEntry) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{28}
}

func (x *RefreshCollectionEntry) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RefreshCollectionEntry) GetRefreshId() int64 {
	if x != nil {
		return x.RefreshId
	}
	return 0
}

type CleanCollectionEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshId int64 `protobuf:"varint,1,opt,name=refresh_id,json=refreshId,proto3" json:"refresh_id,omitempty"`
}

func (x *CleanCollectionEntry) Reset() {
	*x = CleanCollectionEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanCollectionEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanCollectionEntry) ProtoMessage() {}

func (x *CleanCollectionEntry) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanCollectionEntry.ProtoReflect.Descriptor instead.
func (*CleanCollectionEntry) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{29}
}

func (x *CleanCollectionEntry) GetRefreshId() int64 {
	if x != nil {
		return x.RefreshId
	}
	return 0
}

type RefreshIntents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId int64 `protobuf:"varint,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *RefreshIntents) Reset() {
	*x = RefreshIntents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshIntents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshIntents) ProtoMessage() {}

func (x *RefreshIntents) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshIntents.ProtoReflect.Descriptor instead.
func (*RefreshIntents) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{30}
}

func (x *RefreshIntents) GetInstanceId() int64 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

type EnqueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Element *QueueElement `protobuf:"bytes,1,opt,name=element,proto3" json:"element,omitempty"`
}

func (x *EnqueueRequest) Reset() {
	*x = EnqueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueRequest) ProtoMessage() {}

func (x *EnqueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueRequest.ProtoReflect.Descriptor instead.
func (*EnqueueRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{31}
}

func (x *EnqueueRequest) GetElement() *QueueElement {
	if x != nil {
		return x.Element
	}
	return nil
}

type EnqueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnqueueResponse) Reset() {
	*x = EnqueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueResponse) ProtoMessage() {}

func (x *EnqueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueResponse.ProtoReflect.Descriptor instead.
func (*EnqueueResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{32}
}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{33}
}

type ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []*QueueElement `protobuf:"bytes,2,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{34}
}

func (x *ListResponse) GetElements() []*QueueElement {
	if x != nil {
		return x.Elements
	}
	return nil
}

type DrainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DrainRequest) Reset() {
	*x = DrainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrainRequest) ProtoMessage() {}

func (x *DrainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrainRequest.ProtoReflect.Descriptor instead.
func (*DrainRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{35}
}

type DrainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DrainResponse) Reset() {
	*x = DrainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrainResponse) ProtoMessage() {}

func (x *DrainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrainResponse.ProtoReflect.Descriptor instead.
func (*DrainResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{36}
}

func (x *DrainResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type StoredUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth                  *GramophileAuth   `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	User                  *proto.User       `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	UserToken             string            `protobuf:"bytes,3,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	UserSecret            string            `protobuf:"bytes,4,opt,name=user_secret,json=userSecret,proto3" json:"user_secret,omitempty"`
	LastRefreshTime       int64             `protobuf:"varint,5,opt,name=last_refresh_time,json=lastRefreshTime,proto3" json:"last_refresh_time,omitempty"`
	LastCollectionRefresh int64             `protobuf:"varint,6,opt,name=last_collection_refresh,json=lastCollectionRefresh,proto3" json:"last_collection_refresh,omitempty"`
	LastConfigUpdate      int64             `protobuf:"varint,7,opt,name=last_config_update,json=lastConfigUpdate,proto3" json:"last_config_update,omitempty"`
	LastSaleRefresh       int64             `protobuf:"varint,11,opt,name=last_sale_refresh,json=lastSaleRefresh,proto3" json:"last_sale_refresh,omitempty"`
	Config                *GramophileConfig `protobuf:"bytes,8,opt,name=config,proto3" json:"config,omitempty"`
	Folders               []*proto.Folder   `protobuf:"bytes,9,rep,name=folders,proto3" json:"folders,omitempty"`
	Moves                 []*FolderMove     `protobuf:"bytes,10,rep,name=moves,proto3" json:"moves,omitempty"`
}

func (x *StoredUser) Reset() {
	*x = StoredUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoredUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoredUser) ProtoMessage() {}

func (x *StoredUser) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoredUser.ProtoReflect.Descriptor instead.
func (*StoredUser) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{37}
}

func (x *StoredUser) GetAuth() *GramophileAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *StoredUser) GetUser() *proto.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *StoredUser) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *StoredUser) GetUserSecret() string {
	if x != nil {
		return x.UserSecret
	}
	return ""
}

func (x *StoredUser) GetLastRefreshTime() int64 {
	if x != nil {
		return x.LastRefreshTime
	}
	return 0
}

func (x *StoredUser) GetLastCollectionRefresh() int64 {
	if x != nil {
		return x.LastCollectionRefresh
	}
	return 0
}

func (x *StoredUser) GetLastConfigUpdate() int64 {
	if x != nil {
		return x.LastConfigUpdate
	}
	return 0
}

func (x *StoredUser) GetLastSaleRefresh() int64 {
	if x != nil {
		return x.LastSaleRefresh
	}
	return 0
}

func (x *StoredUser) GetConfig() *GramophileConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *StoredUser) GetFolders() []*proto.Folder {
	if x != nil {
		return x.Folders
	}
	return nil
}

func (x *StoredUser) GetMoves() []*FolderMove {
	if x != nil {
		return x.Moves
	}
	return nil
}

type GramophileAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GramophileAuth) Reset() {
	*x = GramophileAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GramophileAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GramophileAuth) ProtoMessage() {}

func (x *GramophileAuth) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GramophileAuth.ProtoReflect.Descriptor instead.
func (*GramophileAuth) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{38}
}

func (x *GramophileAuth) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UserLoginAttempts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attempts []*UserLoginAttempt `protobuf:"bytes,1,rep,name=attempts,proto3" json:"attempts,omitempty"`
}

func (x *UserLoginAttempts) Reset() {
	*x = UserLoginAttempts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginAttempts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginAttempts) ProtoMessage() {}

func (x *UserLoginAttempts) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginAttempts.ProtoReflect.Descriptor instead.
func (*UserLoginAttempts) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{39}
}

func (x *UserLoginAttempts) GetAttempts() []*UserLoginAttempt {
	if x != nil {
		return x.Attempts
	}
	return nil
}

type UserLoginAttempt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestToken string `protobuf:"bytes,1,opt,name=RequestToken,proto3" json:"RequestToken,omitempty"`
	Secret       string `protobuf:"bytes,2,opt,name=Secret,proto3" json:"Secret,omitempty"`
	DateAdded    int64  `protobuf:"varint,3,opt,name=DateAdded,proto3" json:"DateAdded,omitempty"`
	UserToken    string `protobuf:"bytes,4,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	UserSecret   string `protobuf:"bytes,5,opt,name=user_secret,json=userSecret,proto3" json:"user_secret,omitempty"`
}

func (x *UserLoginAttempt) Reset() {
	*x = UserLoginAttempt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginAttempt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginAttempt) ProtoMessage() {}

func (x *UserLoginAttempt) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginAttempt.ProtoReflect.Descriptor instead.
func (*UserLoginAttempt) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{40}
}

func (x *UserLoginAttempt) GetRequestToken() string {
	if x != nil {
		return x.RequestToken
	}
	return ""
}

func (x *UserLoginAttempt) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *UserLoginAttempt) GetDateAdded() int64 {
	if x != nil {
		return x.DateAdded
	}
	return 0
}

func (x *UserLoginAttempt) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *UserLoginAttempt) GetUserSecret() string {
	if x != nil {
		return x.UserSecret
	}
	return ""
}

type GetURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetURLRequest) Reset() {
	*x = GetURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetURLRequest) ProtoMessage() {}

func (x *GetURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetURLRequest.ProtoReflect.Descriptor instead.
func (*GetURLRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{41}
}

type GetURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL   string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *GetURLResponse) Reset() {
	*x = GetURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetURLResponse) ProtoMessage() {}

func (x *GetURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetURLResponse.ProtoReflect.Descriptor instead.
func (*GetURLResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{42}
}

func (x *GetURLResponse) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *GetURLResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *GetLoginRequest) Reset() {
	*x = GetLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoginRequest) ProtoMessage() {}

func (x *GetLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoginRequest.ProtoReflect.Descriptor instead.
func (*GetLoginRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{43}
}

func (x *GetLoginRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *GramophileAuth `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *GetLoginResponse) Reset() {
	*x = GetLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoginResponse) ProtoMessage() {}

func (x *GetLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoginResponse.ProtoReflect.Descriptor instead.
func (*GetLoginResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{44}
}

func (x *GetLoginResponse) GetAuth() *GramophileAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

type GetStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStateRequest) Reset() {
	*x = GetStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStateRequest) ProtoMessage() {}

func (x *GetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStateRequest.ProtoReflect.Descriptor instead.
func (*GetStateRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{45}
}

type GetStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastUserRefresh    int64  `protobuf:"varint,1,opt,name=last_user_refresh,json=lastUserRefresh,proto3" json:"last_user_refresh,omitempty"`
	CollectionSize     int32  `protobuf:"varint,2,opt,name=collection_size,json=collectionSize,proto3" json:"collection_size,omitempty"`
	LastCollectionSync int64  `protobuf:"varint,3,opt,name=last_collection_sync,json=lastCollectionSync,proto3" json:"last_collection_sync,omitempty"`
	LastConfigUpdate   int64  `protobuf:"varint,4,opt,name=last_config_update,json=lastConfigUpdate,proto3" json:"last_config_update,omitempty"`
	ConfigHash         string `protobuf:"bytes,5,opt,name=config_hash,json=configHash,proto3" json:"config_hash,omitempty"`
	CollectionMisses   int32  `protobuf:"varint,6,opt,name=collection_misses,json=collectionMisses,proto3" json:"collection_misses,omitempty"`
	FolderCount        int32  `protobuf:"varint,7,opt,name=folder_count,json=folderCount,proto3" json:"folder_count,omitempty"`
}

func (x *GetStateResponse) Reset() {
	*x = GetStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStateResponse) ProtoMessage() {}

func (x *GetStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStateResponse.ProtoReflect.Descriptor instead.
func (*GetStateResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{46}
}

func (x *GetStateResponse) GetLastUserRefresh() int64 {
	if x != nil {
		return x.LastUserRefresh
	}
	return 0
}

func (x *GetStateResponse) GetCollectionSize() int32 {
	if x != nil {
		return x.CollectionSize
	}
	return 0
}

func (x *GetStateResponse) GetLastCollectionSync() int64 {
	if x != nil {
		return x.LastCollectionSync
	}
	return 0
}

func (x *GetStateResponse) GetLastConfigUpdate() int64 {
	if x != nil {
		return x.LastConfigUpdate
	}
	return 0
}

func (x *GetStateResponse) GetConfigHash() string {
	if x != nil {
		return x.ConfigHash
	}
	return ""
}

func (x *GetStateResponse) GetCollectionMisses() int32 {
	if x != nil {
		return x.CollectionMisses
	}
	return 0
}

func (x *GetStateResponse) GetFolderCount() int32 {
	if x != nil {
		return x.FolderCount
	}
	return 0
}

type SetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *GramophileConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *SetConfigRequest) Reset() {
	*x = SetConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigRequest) ProtoMessage() {}

func (x *SetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigRequest.ProtoReflect.Descriptor instead.
func (*SetConfigRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{47}
}

func (x *SetConfigRequest) GetConfig() *GramophileConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type SetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetConfigResponse) Reset() {
	*x = SetConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigResponse) ProtoMessage() {}

func (x *SetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigResponse.ProtoReflect.Descriptor instead.
func (*SetConfigResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{48}
}

type SetIntentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId int64   `protobuf:"varint,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Intent     *Intent `protobuf:"bytes,2,opt,name=intent,proto3" json:"intent,omitempty"`
}

func (x *SetIntentRequest) Reset() {
	*x = SetIntentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetIntentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIntentRequest) ProtoMessage() {}

func (x *SetIntentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIntentRequest.ProtoReflect.Descriptor instead.
func (*SetIntentRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{49}
}

func (x *SetIntentRequest) GetInstanceId() int64 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *SetIntentRequest) GetIntent() *Intent {
	if x != nil {
		return x.Intent
	}
	return nil
}

type SetIntentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetIntentResponse) Reset() {
	*x = SetIntentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetIntentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIntentResponse) ProtoMessage() {}

func (x *SetIntentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIntentResponse.ProtoReflect.Descriptor instead.
func (*SetIntentResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{50}
}

type GetRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//	*GetRecordRequest_GetRecordWithIssue
	//	*GetRecordRequest_GetRecordToListenTo
	//	*GetRecordRequest_GetRecordWithId
	Request        isGetRecordRequest_Request `protobuf_oneof:"request"`
	IncludeHistory bool                       `protobuf:"varint,4,opt,name=include_history,json=includeHistory,proto3" json:"include_history,omitempty"`
}

func (x *GetRecordRequest) Reset() {
	*x = GetRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordRequest) ProtoMessage() {}

func (x *GetRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordRequest.ProtoReflect.Descriptor instead.
func (*GetRecordRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{51}
}

func (m *GetRecordRequest) GetRequest() isGetRecordRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *GetRecordRequest) GetGetRecordWithIssue() *GetRecordWithIssue {
	if x, ok := x.GetRequest().(*GetRecordRequest_GetRecordWithIssue); ok {
		return x.GetRecordWithIssue
	}
	return nil
}

func (x *GetRecordRequest) GetGetRecordToListenTo() *GetRecordToListenTo {
	if x, ok := x.GetRequest().(*GetRecordRequest_GetRecordToListenTo); ok {
		return x.GetRecordToListenTo
	}
	return nil
}

func (x *GetRecordRequest) GetGetRecordWithId() *GetRecordWithId {
	if x, ok := x.GetRequest().(*GetRecordRequest_GetRecordWithId); ok {
		return x.GetRecordWithId
	}
	return nil
}

func (x *GetRecordRequest) GetIncludeHistory() bool {
	if x != nil {
		return x.IncludeHistory
	}
	return false
}

type isGetRecordRequest_Request interface {
	isGetRecordRequest_Request()
}

type GetRecordRequest_GetRecordWithIssue struct {
	GetRecordWithIssue *GetRecordWithIssue `protobuf:"bytes,1,opt,name=get_record_with_issue,json=getRecordWithIssue,proto3,oneof"`
}

type GetRecordRequest_GetRecordToListenTo struct {
	GetRecordToListenTo *GetRecordToListenTo `protobuf:"bytes,2,opt,name=get_record_to_listen_to,json=getRecordToListenTo,proto3,oneof"`
}

type GetRecordRequest_GetRecordWithId struct {
	GetRecordWithId *GetRecordWithId `protobuf:"bytes,3,opt,name=get_record_with_id,json=getRecordWithId,proto3,oneof"`
}

func (*GetRecordRequest_GetRecordWithIssue) isGetRecordRequest_Request() {}

func (*GetRecordRequest_GetRecordToListenTo) isGetRecordRequest_Request() {}

func (*GetRecordRequest_GetRecordWithId) isGetRecordRequest_Request() {}

type RecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record   *Record         `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
	Updates  []*RecordUpdate `protobuf:"bytes,2,rep,name=updates,proto3" json:"updates,omitempty"`
	SaleInfo *SaleInfo       `protobuf:"bytes,3,opt,name=sale_info,json=saleInfo,proto3" json:"sale_info,omitempty"`
}

func (x *RecordResponse) Reset() {
	*x = RecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordResponse) ProtoMessage() {}

func (x *RecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordResponse.ProtoReflect.Descriptor instead.
func (*RecordResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{52}
}

func (x *RecordResponse) GetRecord() *Record {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *RecordResponse) GetUpdates() []*RecordUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *RecordResponse) GetSaleInfo() *SaleInfo {
	if x != nil {
		return x.SaleInfo
	}
	return nil
}

type GetRecordWithId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId int64 `protobuf:"varint,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ReleaseId  int64 `protobuf:"varint,2,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
}

func (x *GetRecordWithId) Reset() {
	*x = GetRecordWithId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordWithId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordWithId) ProtoMessage() {}

func (x *GetRecordWithId) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordWithId.ProtoReflect.Descriptor instead.
func (*GetRecordWithId) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{53}
}

func (x *GetRecordWithId) GetInstanceId() int64 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *GetRecordWithId) GetReleaseId() int64 {
	if x != nil {
		return x.ReleaseId
	}
	return 0
}

type GetRecordWithIssue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRecordWithIssue) Reset() {
	*x = GetRecordWithIssue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordWithIssue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordWithIssue) ProtoMessage() {}

func (x *GetRecordWithIssue) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordWithIssue.ProtoReflect.Descriptor instead.
func (*GetRecordWithIssue) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{54}
}

type GetRecordToListenTo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetRecordToListenTo) Reset() {
	*x = GetRecordToListenTo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordToListenTo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordToListenTo) ProtoMessage() {}

func (x *GetRecordToListenTo) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordToListenTo.ProtoReflect.Descriptor instead.
func (*GetRecordToListenTo) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{55}
}

func (x *GetRecordToListenTo) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type GetRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordResponse *RecordResponse   `protobuf:"bytes,1,opt,name=record_response,json=recordResponse,proto3" json:"record_response,omitempty"`
	Records        []*RecordResponse `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *GetRecordResponse) Reset() {
	*x = GetRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordResponse) ProtoMessage() {}

func (x *GetRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordResponse.ProtoReflect.Descriptor instead.
func (*GetRecordResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{56}
}

func (x *GetRecordResponse) GetRecordResponse() *RecordResponse {
	if x != nil {
		return x.RecordResponse
	}
	return nil
}

func (x *GetRecordResponse) GetRecords() []*RecordResponse {
	if x != nil {
		return x.Records
	}
	return nil
}

type GetOrgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgName string `protobuf:"bytes,1,opt,name=org_name,json=orgName,proto3" json:"org_name,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetOrgRequest) Reset() {
	*x = GetOrgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgRequest) ProtoMessage() {}

func (x *GetOrgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgRequest.ProtoReflect.Descriptor instead.
func (*GetOrgRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{57}
}

func (x *GetOrgRequest) GetOrgName() string {
	if x != nil {
		return x.OrgName
	}
	return ""
}

func (x *GetOrgRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetOrgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshot *OrganisationSnapshot `protobuf:"bytes,1,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
}

func (x *GetOrgResponse) Reset() {
	*x = GetOrgResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgResponse) ProtoMessage() {}

func (x *GetOrgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgResponse.ProtoReflect.Descriptor instead.
func (*GetOrgResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{58}
}

func (x *GetOrgResponse) GetSnapshot() *OrganisationSnapshot {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type SetOrgSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgName string `protobuf:"bytes,1,opt,name=org_name,json=orgName,proto3" json:"org_name,omitempty"`
	Date    int64  `protobuf:"varint,2,opt,name=date,proto3" json:"date,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SetOrgSnapshotRequest) Reset() {
	*x = SetOrgSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOrgSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOrgSnapshotRequest) ProtoMessage() {}

func (x *SetOrgSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOrgSnapshotRequest.ProtoReflect.Descriptor instead.
func (*SetOrgSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{59}
}

func (x *SetOrgSnapshotRequest) GetOrgName() string {
	if x != nil {
		return x.OrgName
	}
	return ""
}

func (x *SetOrgSnapshotRequest) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *SetOrgSnapshotRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SetOrgSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetOrgSnapshotResponse) Reset() {
	*x = SetOrgSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOrgSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOrgSnapshotResponse) ProtoMessage() {}

func (x *SetOrgSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOrgSnapshotResponse.ProtoReflect.Descriptor instead.
func (*SetOrgSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{60}
}

type AddWantlistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type       WantlistType       `protobuf:"varint,2,opt,name=type,proto3,enum=gramophile.WantlistType" json:"type,omitempty"`
	Visibility WantlistVisibility `protobuf:"varint,3,opt,name=visibility,proto3,enum=gramophile.WantlistVisibility" json:"visibility,omitempty"`
}

func (x *AddWantlistRequest) Reset() {
	*x = AddWantlistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWantlistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWantlistRequest) ProtoMessage() {}

func (x *AddWantlistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWantlistRequest.ProtoReflect.Descriptor instead.
func (*AddWantlistRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{61}
}

func (x *AddWantlistRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddWantlistRequest) GetType() WantlistType {
	if x != nil {
		return x.Type
	}
	return WantlistType_EN_MASSE
}

func (x *AddWantlistRequest) GetVisibility() WantlistVisibility {
	if x != nil {
		return x.Visibility
	}
	return WantlistVisibility_VISIBLE
}

type AddWantlistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddWantlistResponse) Reset() {
	*x = AddWantlistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWantlistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWantlistResponse) ProtoMessage() {}

func (x *AddWantlistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWantlistResponse.ProtoReflect.Descriptor instead.
func (*AddWantlistResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{62}
}

type RefreshRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId int64 `protobuf:"varint,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *RefreshRecordRequest) Reset() {
	*x = RefreshRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshRecordRequest) ProtoMessage() {}

func (x *RefreshRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshRecordRequest.ProtoReflect.Descriptor instead.
func (*RefreshRecordRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{63}
}

func (x *RefreshRecordRequest) GetInstanceId() int64 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

type RefreshRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshRecordResponse) Reset() {
	*x = RefreshRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshRecordResponse) ProtoMessage() {}

func (x *RefreshRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshRecordResponse.ProtoReflect.Descriptor instead.
func (*RefreshRecordResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{64}
}

type UpdateWantlistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AddId    int64  `protobuf:"varint,2,opt,name=add_id,json=addId,proto3" json:"add_id,omitempty"`
	DeleteId int64  `protobuf:"varint,3,opt,name=delete_id,json=deleteId,proto3" json:"delete_id,omitempty"`
}

func (x *UpdateWantlistRequest) Reset() {
	*x = UpdateWantlistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWantlistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWantlistRequest) ProtoMessage() {}

func (x *UpdateWantlistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWantlistRequest.ProtoReflect.Descriptor instead.
func (*UpdateWantlistRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{65}
}

func (x *UpdateWantlistRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateWantlistRequest) GetAddId() int64 {
	if x != nil {
		return x.AddId
	}
	return 0
}

func (x *UpdateWantlistRequest) GetDeleteId() int64 {
	if x != nil {
		return x.DeleteId
	}
	return 0
}

type UpdateWantlistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateWantlistResponse) Reset() {
	*x = UpdateWantlistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWantlistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWantlistResponse) ProtoMessage() {}

func (x *UpdateWantlistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWantlistResponse.ProtoReflect.Descriptor instead.
func (*UpdateWantlistResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{66}
}

type GetWantsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetWantsRequest) Reset() {
	*x = GetWantsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWantsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWantsRequest) ProtoMessage() {}

func (x *GetWantsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWantsRequest.ProtoReflect.Descriptor instead.
func (*GetWantsRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{67}
}

type GetWantsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wants []*Want `protobuf:"bytes,1,rep,name=wants,proto3" json:"wants,omitempty"`
}

func (x *GetWantsResponse) Reset() {
	*x = GetWantsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWantsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWantsResponse) ProtoMessage() {}

func (x *GetWantsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWantsResponse.ProtoReflect.Descriptor instead.
func (*GetWantsResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{68}
}

func (x *GetWantsResponse) GetWants() []*Want {
	if x != nil {
		return x.Wants
	}
	return nil
}

type DeleteWantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WantId int64 `protobuf:"varint,1,opt,name=want_id,json=wantId,proto3" json:"want_id,omitempty"`
}

func (x *DeleteWantRequest) Reset() {
	*x = DeleteWantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWantRequest) ProtoMessage() {}

func (x *DeleteWantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWantRequest.ProtoReflect.Descriptor instead.
func (*DeleteWantRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{69}
}

func (x *DeleteWantRequest) GetWantId() int64 {
	if x != nil {
		return x.WantId
	}
	return 0
}

type DeleteWantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteWantResponse) Reset() {
	*x = DeleteWantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWantResponse) ProtoMessage() {}

func (x *DeleteWantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWantResponse.ProtoReflect.Descriptor instead.
func (*DeleteWantResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{70}
}

type AddWantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WantId int64 `protobuf:"varint,1,opt,name=want_id,json=wantId,proto3" json:"want_id,omitempty"`
}

func (x *AddWantRequest) Reset() {
	*x = AddWantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWantRequest) ProtoMessage() {}

func (x *AddWantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWantRequest.ProtoReflect.Descriptor instead.
func (*AddWantRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{71}
}

func (x *AddWantRequest) GetWantId() int64 {
	if x != nil {
		return x.WantId
	}
	return 0
}

type AddWantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddWantResponse) Reset() {
	*x = AddWantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWantResponse) ProtoMessage() {}

func (x *AddWantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWantResponse.ProtoReflect.Descriptor instead.
func (*AddWantResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{72}
}

type GetWantlistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetWantlistRequest) Reset() {
	*x = GetWantlistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWantlistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWantlistRequest) ProtoMessage() {}

func (x *GetWantlistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWantlistRequest.ProtoReflect.Descriptor instead.
func (*GetWantlistRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{73}
}

func (x *GetWantlistRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetWantlistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List *Wantlist `protobuf:"bytes,1,opt,name=list,proto3" json:"list,omitempty"`
}

func (x *GetWantlistResponse) Reset() {
	*x = GetWantlistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWantlistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWantlistResponse) ProtoMessage() {}

func (x *GetWantlistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWantlistResponse.ProtoReflect.Descriptor instead.
func (*GetWantlistResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{74}
}

func (x *GetWantlistResponse) GetList() *Wantlist {
	if x != nil {
		return x.List
	}
	return nil
}

type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{75}
}

type GetUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *StoredUser `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{76}
}

func (x *GetUserResponse) GetUser() *StoredUser {
	if x != nil {
		return x.User
	}
	return nil
}

type GetUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUsersRequest) Reset() {
	*x = GetUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersRequest) ProtoMessage() {}

func (x *GetUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersRequest.ProtoReflect.Descriptor instead.
func (*GetUsersRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{77}
}

type GetUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*StoredUser `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *GetUsersResponse) Reset() {
	*x = GetUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersResponse) ProtoMessage() {}

func (x *GetUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersResponse.ProtoReflect.Descriptor instead.
func (*GetUsersResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{78}
}

func (x *GetUsersResponse) GetUsers() []*StoredUser {
	if x != nil {
		return x.Users
	}
	return nil
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{79}
}

func (x *DeleteUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUserResponse) Reset() {
	*x = DeleteUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResponse) ProtoMessage() {}

func (x *DeleteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{80}
}

type CleanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CleanRequest) Reset() {
	*x = CleanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanRequest) ProtoMessage() {}

func (x *CleanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanRequest.ProtoReflect.Descriptor instead.
func (*CleanRequest) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{81}
}

type CleanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CleanResponse) Reset() {
	*x = CleanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gramophile_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanResponse) ProtoMessage() {}

func (x *CleanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gramophile_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanResponse.ProtoReflect.Descriptor instead.
func (*CleanResponse) Descriptor() ([]byte, []int) {
	return file_gramophile_proto_rawDescGZIP(), []int{82}
}

var File_gramophile_proto protoreflect.FileDescriptor

var file_gramophile_proto_rawDesc = []byte{
	0x0a, 0x10, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x1a, 0x33,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x67, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x12, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfb, 0x01, 0x0a, 0x08, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x57, 0x61, 0x6e, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x33,
	0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x57, 0x61, 0x6e,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70,
	0x68, 0x69, 0x6c, 0x65, 0x2e, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x22, 0xb3, 0x01, 0x0a, 0x0d, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f,
	0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x57, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x04, 0x57, 0x61,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x61, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x77, 0x61, 0x6e,
	0x74, 0x41, 0x64, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x61, 0x6d,
	0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x57, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x64,
	0x22, 0xb6, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69,
	0x6c, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x12, 0x28, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x6c, 0x61,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78,
	0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb1, 0x06, 0x0a, 0x06, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x67, 0x73, 0x2e,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x47,
	0x6f, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x61, 0x73, 0x68, 0x12, 0x26, 0x0a,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6c, 0x65, 0x61,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6e, 0x75, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x61,
	0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f, 0x61, 0x6c, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x65, 0x65, 0x76, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x65, 0x65, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72,
	0x72, 0x69, 0x76, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x72, 0x72,
	0x69, 0x76, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x61, 0x6c,
	0x65, 0x5f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x12, 0x6d, 0x69, 0x6e, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x53, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x37, 0x0a, 0x0b, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c,
	0x65, 0x2e, 0x4b, 0x65, 0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x6b, 0x65,
	0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x0c, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x0b,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x6c,
	0x6f, 0x77, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x08,
	0x6c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x61, 0x72, 0x6c,
	0x69, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x65, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x1c,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x19, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0xed, 0x04,
	0x0a, 0x08, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x61,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x61, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x32, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x67, 0x73, 0x2e, 0x53, 0x61,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x33, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x67, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x0c, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x0b, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a,
	0x09, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x08, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72,
	0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a,
	0x0e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x74, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x65, 0x64, 0x22, 0x4e, 0x0a,
	0x0b, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x2b, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x67, 0x73, 0x2e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x08, 0x73, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x92, 0x02,
	0x0a, 0x06, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x65, 0x61,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c,
	0x65, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x66,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f, 0x61,
	0x6c, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x65, 0x65, 0x76,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x65, 0x65, 0x76, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x72, 0x72, 0x69, 0x76, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x61, 0x72, 0x72, 0x69, 0x76, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x6b, 0x65, 0x65,
	0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70,
	0x68, 0x69, 0x6c, 0x65, 0x2e, 0x4b, 0x65, 0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x04, 0x6b, 0x65, 0x65, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0x33, 0x0a, 0x06, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x06,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67,
	0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52,
	0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68,
	0x69, 0x6c, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xe6, 0x0b, 0x0a, 0x0c, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x75, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x75, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x61,
	0x63, 0x6b, 0x6f, 0x66, 0x66, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x49,
	0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x41, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0b,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x5e, 0x0a, 0x18, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x16, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x45, 0x0a, 0x0f, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c,
	0x65, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x45, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72,
	0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x11, 0x61, 0x64, 0x64,
	0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c,
	0x65, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72,
	0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x61, 0x6d,
	0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x48, 0x00, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x4b, 0x0a,
	0x11, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x77, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73,
	0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f,
	0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x57, 0x61, 0x6e,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x61, 0x64,
	0x64, 0x5f, 0x77, 0x61, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67,
	0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x61, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x57, 0x61, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0d,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x57, 0x61, 0x6e, 0x74, 0x73, 0x48, 0x00, 0x52,
	0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x57, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x39, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x6d, 0x6f, 0x76, 0x65,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x6f, 0x76, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x0b, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x72,
	0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x45, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x61,
	0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c,
	0x65, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6e, 0x0a, 0x1e, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x45, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x1b, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x45, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12, 0x6b, 0x0a, 0x1d, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x45, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x45, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x77, 0x61,
	0x6e, 0x74, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x61, 0x6d,
	0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x61, 0x6e, 0x74, 0x73,
	0x48, 0x00, 0x52, 0x09, 0x73, 0x79, 0x6e, 0x63, 0x57, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x3c, 0x0a,
	0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x77, 0x61, 0x6e, 0x74, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x57, 0x61, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x57, 0x61, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x22, 0x26, 0x0a, 0x0b, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x57, 0x61,
	0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x09, 0x53,
	0x79, 0x6e, 0x63, 0x57, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x1b, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x45, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x69, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x1a, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x45, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x69, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x22, 0x13,
	0x0a, 0x11, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x22, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x69, 0x64, 0x22, 0x7f, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x0a, 0x4d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x76, 0x65, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x4d, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x57, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x19, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x57,
	0x61, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x57, 0x61,
	0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x22, 0x2a, 0x0a, 0x09, 0x4c, 0x69, 0x6e, 0x6b, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x26, 0x0a, 0x10,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x22, 0x4b, 0x0a, 0x16, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x49,
	0x64, 0x22, 0x35, 0x0a, 0x14, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x0e, 0x45,
	0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x11, 0x0a, 0x0f, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69,
	0x6c, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x44, 0x72, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x25, 0x0a, 0x0d, 0x44, 0x72, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xec, 0x03, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x6d, 0x6f,
	0x70, 0x68, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12,
	0x21, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x67, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36,
	0x0a, 0x17, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x15, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x61, 0x6c,
	0x65, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x12, 0x34, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x72,
	0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x29, 0x0a, 0x07, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x67,
	0x73, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x07, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x2c, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x22,
	0x26, 0x0a, 0x0e, 0x47, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4d, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x08,
	0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x08, 0x61, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x65, 0x41,
	0x64, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x44, 0x61, 0x74, 0x65,
	0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x52, 0x4c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x52, 0x4c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x27, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x42, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x72,
	0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68,
	0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x11, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0xb8, 0x02, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x79,
	0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x2c, 0x0a, 0x12,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2b, 0x0a, 0x11, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x10, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x72, 0x61,
	0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5f, 0x0a, 0x10, 0x53, 0x65,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x53,
	0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xc0, 0x02, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x48, 0x00, 0x52, 0x12, 0x67, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x57, 0x0a, 0x17, 0x67, 0x65,
	0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x72,
	0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x54, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x54, 0x6f, 0x48, 0x00, 0x52, 0x13,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x54, 0x6f, 0x12, 0x4a, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0f,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68,
	0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x61, 0x6d,
	0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x73, 0x61, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x51, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x22, 0x2d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x54, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x22, 0x8e, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x22, 0x3e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68,
	0x69, 0x6c, 0x65, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x22, 0x5a, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x18,
	0x0a, 0x16, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x57,
	0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69,
	0x6c, 0x65, 0x2e, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5f, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x64, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x64, 0x64, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57,
	0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05,
	0x77, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x72,
	0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x57, 0x61, 0x6e, 0x74, 0x52, 0x05, 0x77,
	0x61, 0x6e, 0x74, 0x73, 0x22, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x57,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x57, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6e,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x3f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69,
	0x6c, 0x65, 0x2e, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c,
	0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f,
	0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2a, 0x3e, 0x0a, 0x0c, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x4e, 0x5f, 0x4d, 0x41, 0x53, 0x53, 0x45, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x59, 0x5f, 0x4f, 0x4e, 0x45, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x45,
	0x44, 0x10, 0x02, 0x2a, 0x30, 0x0a, 0x12, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x49, 0x53,
	0x49, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x56, 0x49, 0x53, 0x49,
	0x42, 0x4c, 0x45, 0x10, 0x01, 0x2a, 0x4c, 0x0a, 0x09, 0x57, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x45, 0x54, 0x49, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x50, 0x55, 0x52, 0x43, 0x48, 0x41, 0x53, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x57,
	0x41, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x49, 0x44, 0x44, 0x45,
	0x4e, 0x10, 0x04, 0x2a, 0x25, 0x0a, 0x12, 0x4e, 0x6f, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x45, 0x45,
	0x44, 0x53, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x00, 0x2a, 0x64, 0x0a, 0x0a, 0x4b, 0x65,
	0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x45, 0x45, 0x50,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f,
	0x5f, 0x4b, 0x45, 0x45, 0x50, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x49, 0x47, 0x49, 0x54,
	0x41, 0x4c, 0x5f, 0x4b, 0x45, 0x45, 0x50, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x49, 0x4e,
	0x54, 0x5f, 0x55, 0x50, 0x5f, 0x4b, 0x45, 0x45, 0x50, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4b,
	0x45, 0x45, 0x50, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x53, 0x45, 0x54, 0x10, 0x05,
	0x32, 0x97, 0x02, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x44, 0x0a, 0x07, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1a, 0x2e, 0x67,
	0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f,
	0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e,
	0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69,
	0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x05, 0x44, 0x72,
	0x61, 0x69, 0x6e, 0x12, 0x18, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65,
	0x2e, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x44, 0x72, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xe6, 0x09, 0x0a, 0x12, 0x47,
	0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x45, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x41, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x19, 0x2e, 0x67, 0x72,
	0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x52, 0x4c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68,
	0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x1b, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f,
	0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1b, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67,
	0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x09,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x61, 0x6d,
	0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70,
	0x68, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69,
	0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65,
	0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x56, 0x0a, 0x0d, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x20, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x12, 0x19, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0e, 0x53,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x21, 0x2e,
	0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x65,
	0x74, 0x4f, 0x72, 0x67, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x57, 0x61, 0x6e,
	0x74, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x57, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x57, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f,
	0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69,
	0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57,
	0x61, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x57, 0x61, 0x6e, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65,
	0x2e, 0x41, 0x64, 0x64, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65,
	0x2e, 0x41, 0x64, 0x64, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6e,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69,
	0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69,
	0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x67, 0x72, 0x61,
	0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61,
	0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x57, 0x61, 0x6e, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x32, 0xeb, 0x01, 0x0a, 0x11, 0x47, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69,
	0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69,
	0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x1d, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x05, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x18, 0x2e, 0x67, 0x72, 0x61,
	0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x72, 0x61, 0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c,
	0x65, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x62, 0x72, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x67, 0x72, 0x61,
	0x6d, 0x6f, 0x70, 0x68, 0x69, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gramophile_proto_rawDescOnce sync.Once
	file_gramophile_proto_rawDescData = file_gramophile_proto_rawDesc
)

func file_gramophile_proto_rawDescGZIP() []byte {
	file_gramophile_proto_rawDescOnce.Do(func() {
		file_gramophile_proto_rawDescData = protoimpl.X.CompressGZIP(file_gramophile_proto_rawDescData)
	})
	return file_gramophile_proto_rawDescData
}

var file_gramophile_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_gramophile_proto_msgTypes = make([]protoimpl.MessageInfo, 83)
var file_gramophile_proto_goTypes = []interface{}{
	(WantlistType)(0),                   // 0: gramophile.WantlistType
	(WantlistVisibility)(0),             // 1: gramophile.WantlistVisibility
	(WantState)(0),                      // 2: gramophile.WantState
	(NoncomplianceIssue)(0),             // 3: gramophile.NoncomplianceIssue
	(KeepStatus)(0),                     // 4: gramophile.KeepStatus
	(*Wantlist)(nil),                    // 5: gramophile.Wantlist
	(*WantlistEntry)(nil),               // 6: gramophile.WantlistEntry
	(*Want)(nil),                        // 7: gramophile.Want
	(*RecordUpdate)(nil),                // 8: gramophile.RecordUpdate
	(*Record)(nil),                      // 9: gramophile.Record
	(*SaleInfo)(nil),                    // 10: gramophile.SaleInfo
	(*PriceUpdate)(nil),                 // 11: gramophile.PriceUpdate
	(*Intent)(nil),                      // 12: gramophile.Intent
	(*Queues)(nil),                      // 13: gramophile.Queues
	(*Queue)(nil),                       // 14: gramophile.Queue
	(*QueueElement)(nil),                // 15: gramophile.QueueElement
	(*RefreshWant)(nil),                 // 16: gramophile.RefreshWant
	(*SyncWants)(nil),                   // 17: gramophile.SyncWants
	(*RefreshEarliestReleaseDates)(nil), // 18: gramophile.RefreshEarliestReleaseDates
	(*RefreshEarliestReleaseDate)(nil),  // 19: gramophile.RefreshEarliestReleaseDate
	(*RefreshCollection)(nil),           // 20: gramophile.RefreshCollection
	(*RefreshRelease)(nil),              // 21: gramophile.RefreshRelease
	(*UpdateSale)(nil),                  // 22: gramophile.UpdateSale
	(*MoveRecord)(nil),                  // 23: gramophile.MoveRecord
	(*MoveRecords)(nil),                 // 24: gramophile.MoveRecords
	(*RefreshWants)(nil),                // 25: gramophile.RefreshWants
	(*AddWant)(nil),                     // 26: gramophile.AddWant
	(*RefreshWantlists)(nil),            // 27: gramophile.RefreshWantlists
	(*LinkSales)(nil),                   // 28: gramophile.LinkSales
	(*RefreshSales)(nil),                // 29: gramophile.RefreshSales
	(*AddFolderUpdate)(nil),             // 30: gramophile.AddFolderUpdate
	(*RefreshUpdates)(nil),              // 31: gramophile.RefreshUpdates
	(*RefreshUserEntry)(nil),            // 32: gramophile.RefreshUserEntry
	(*RefreshCollectionEntry)(nil),      // 33: gramophile.RefreshCollectionEntry
	(*CleanCollectionEntry)(nil),        // 34: gramophile.CleanCollectionEntry
	(*RefreshIntents)(nil),              // 35: gramophile.RefreshIntents
	(*EnqueueRequest)(nil),              // 36: gramophile.EnqueueRequest
	(*EnqueueResponse)(nil),             // 37: gramophile.EnqueueResponse
	(*ListRequest)(nil),                 // 38: gramophile.ListRequest
	(*ListResponse)(nil),                // 39: gramophile.ListResponse
	(*DrainRequest)(nil),                // 40: gramophile.DrainRequest
	(*DrainResponse)(nil),               // 41: gramophile.DrainResponse
	(*StoredUser)(nil),                  // 42: gramophile.StoredUser
	(*GramophileAuth)(nil),              // 43: gramophile.GramophileAuth
	(*UserLoginAttempts)(nil),           // 44: gramophile.UserLoginAttempts
	(*UserLoginAttempt)(nil),            // 45: gramophile.UserLoginAttempt
	(*GetURLRequest)(nil),               // 46: gramophile.GetURLRequest
	(*GetURLResponse)(nil),              // 47: gramophile.GetURLResponse
	(*GetLoginRequest)(nil),             // 48: gramophile.GetLoginRequest
	(*GetLoginResponse)(nil),            // 49: gramophile.GetLoginResponse
	(*GetStateRequest)(nil),             // 50: gramophile.GetStateRequest
	(*GetStateResponse)(nil),            // 51: gramophile.GetStateResponse
	(*SetConfigRequest)(nil),            // 52: gramophile.SetConfigRequest
	(*SetConfigResponse)(nil),           // 53: gramophile.SetConfigResponse
	(*SetIntentRequest)(nil),            // 54: gramophile.SetIntentRequest
	(*SetIntentResponse)(nil),           // 55: gramophile.SetIntentResponse
	(*GetRecordRequest)(nil),            // 56: gramophile.GetRecordRequest
	(*RecordResponse)(nil),              // 57: gramophile.RecordResponse
	(*GetRecordWithId)(nil),             // 58: gramophile.GetRecordWithId
	(*GetRecordWithIssue)(nil),          // 59: gramophile.GetRecordWithIssue
	(*GetRecordToListenTo)(nil),         // 60: gramophile.GetRecordToListenTo
	(*GetRecordResponse)(nil),           // 61: gramophile.GetRecordResponse
	(*GetOrgRequest)(nil),               // 62: gramophile.GetOrgRequest
	(*GetOrgResponse)(nil),              // 63: gramophile.GetOrgResponse
	(*SetOrgSnapshotRequest)(nil),       // 64: gramophile.SetOrgSnapshotRequest
	(*SetOrgSnapshotResponse)(nil),      // 65: gramophile.SetOrgSnapshotResponse
	(*AddWantlistRequest)(nil),          // 66: gramophile.AddWantlistRequest
	(*AddWantlistResponse)(nil),         // 67: gramophile.AddWantlistResponse
	(*RefreshRecordRequest)(nil),        // 68: gramophile.RefreshRecordRequest
	(*RefreshRecordResponse)(nil),       // 69: gramophile.RefreshRecordResponse
	(*UpdateWantlistRequest)(nil),       // 70: gramophile.UpdateWantlistRequest
	(*UpdateWantlistResponse)(nil),      // 71: gramophile.UpdateWantlistResponse
	(*GetWantsRequest)(nil),             // 72: gramophile.GetWantsRequest
	(*GetWantsResponse)(nil),            // 73: gramophile.GetWantsResponse
	(*DeleteWantRequest)(nil),           // 74: gramophile.DeleteWantRequest
	(*DeleteWantResponse)(nil),          // 75: gramophile.DeleteWantResponse
	(*AddWantRequest)(nil),              // 76: gramophile.AddWantRequest
	(*AddWantResponse)(nil),             // 77: gramophile.AddWantResponse
	(*GetWantlistRequest)(nil),          // 78: gramophile.GetWantlistRequest
	(*GetWantlistResponse)(nil),         // 79: gramophile.GetWantlistResponse
	(*GetUserRequest)(nil),              // 80: gramophile.GetUserRequest
	(*GetUserResponse)(nil),             // 81: gramophile.GetUserResponse
	(*GetUsersRequest)(nil),             // 82: gramophile.GetUsersRequest
	(*GetUsersResponse)(nil),            // 83: gramophile.GetUsersResponse
	(*DeleteUserRequest)(nil),           // 84: gramophile.DeleteUserRequest
	(*DeleteUserResponse)(nil),          // 85: gramophile.DeleteUserResponse
	(*CleanRequest)(nil),                // 86: gramophile.CleanRequest
	(*CleanResponse)(nil),               // 87: gramophile.CleanResponse
	(*proto.Release)(nil),               // 88: discogs.Release
	(*proto.Price)(nil),                 // 89: discogs.Price
	(proto.SaleStatus)(0),               // 90: discogs.SaleStatus
	(*proto.User)(nil),                  // 91: discogs.User
	(*GramophileConfig)(nil),            // 92: gramophile.GramophileConfig
	(*proto.Folder)(nil),                // 93: discogs.Folder
	(*FolderMove)(nil),                  // 94: gramophile.FolderMove
	(*OrganisationSnapshot)(nil),        // 95: gramophile.OrganisationSnapshot
}
var file_gramophile_proto_depIdxs = []int32{
	0,  // 0: gramophile.Wantlist.type:type_name -> gramophile.WantlistType
	6,  // 1: gramophile.Wantlist.entries:type_name -> gramophile.WantlistEntry
	1,  // 2: gramophile.Wantlist.visibility:type_name -> gramophile.WantlistVisibility
	2,  // 3: gramophile.WantlistEntry.state:type_name -> gramophile.WantState
	2,  // 4: gramophile.Want.state:type_name -> gramophile.WantState
	9,  // 5: gramophile.RecordUpdate.before:type_name -> gramophile.Record
	9,  // 6: gramophile.RecordUpdate.after:type_name -> gramophile.Record
	88, // 7: gramophile.Record.release:type_name -> discogs.Release
	3,  // 8: gramophile.Record.issues:type_name -> gramophile.NoncomplianceIssue
	4,  // 9: gramophile.Record.keep_status:type_name -> gramophile.KeepStatus
	89, // 10: gramophile.Record.median_price:type_name -> discogs.Price
	89, // 11: gramophile.Record.low_price:type_name -> discogs.Price
	90, // 12: gramophile.SaleInfo.sale_state:type_name -> discogs.SaleStatus
	89, // 13: gramophile.SaleInfo.current_price:type_name -> discogs.Price
	89, // 14: gramophile.SaleInfo.initial_price:type_name -> discogs.Price
	89, // 15: gramophile.SaleInfo.median_price:type_name -> discogs.Price
	89, // 16: gramophile.SaleInfo.low_price:type_name -> discogs.Price
	11, // 17: gramophile.SaleInfo.updates:type_name -> gramophile.PriceUpdate
	89, // 18: gramophile.PriceUpdate.set_price:type_name -> discogs.Price
	4,  // 19: gramophile.Intent.keep:type_name -> gramophile.KeepStatus
	14, // 20: gramophile.Queues.queues:type_name -> gramophile.Queue
	15, // 21: gramophile.Queue.elements:type_name -> gramophile.QueueElement
	32, // 22: gramophile.QueueElement.refresh_user:type_name -> gramophile.RefreshUserEntry
	33, // 23: gramophile.QueueElement.refresh_collection_entry:type_name -> gramophile.RefreshCollectionEntry
	35, // 24: gramophile.QueueElement.refresh_intents:type_name -> gramophile.RefreshIntents
	31, // 25: gramophile.QueueElement.refresh_updates:type_name -> gramophile.RefreshUpdates
	30, // 26: gramophile.QueueElement.add_folder_update:type_name -> gramophile.AddFolderUpdate
	29, // 27: gramophile.QueueElement.refresh_sales:type_name -> gramophile.RefreshSales
	28, // 28: gramophile.QueueElement.link_sales:type_name -> gramophile.LinkSales
	27, // 29: gramophile.QueueElement.refresh_wantlists:type_name -> gramophile.RefreshWantlists
	26, // 30: gramophile.QueueElement.add_want:type_name -> gramophile.AddWant
	25, // 31: gramophile.QueueElement.refresh_wants:type_name -> gramophile.RefreshWants
	22, // 32: gramophile.QueueElement.update_sale:type_name -> gramophile.UpdateSale
	24, // 33: gramophile.QueueElement.move_records:type_name -> gramophile.MoveRecords
	23, // 34: gramophile.QueueElement.move_record:type_name -> gramophile.MoveRecord
	21, // 35: gramophile.QueueElement.refresh_release:type_name -> gramophile.RefreshRelease
	20, // 36: gramophile.QueueElement.refresh_collection:type_name -> gramophile.RefreshCollection
	18, // 37: gramophile.QueueElement.refresh_earliest_release_dates:type_name -> gramophile.RefreshEarliestReleaseDates
	19, // 38: gramophile.QueueElement.refresh_earliest_release_date:type_name -> gramophile.RefreshEarliestReleaseDate
	17, // 39: gramophile.QueueElement.sync_wants:type_name -> gramophile.SyncWants
	16, // 40: gramophile.QueueElement.refresh_want:type_name -> gramophile.RefreshWant
	15, // 41: gramophile.EnqueueRequest.element:type_name -> gramophile.QueueElement
	15, // 42: gramophile.ListResponse.elements:type_name -> gramophile.QueueElement
	43, // 43: gramophile.StoredUser.auth:type_name -> gramophile.GramophileAuth
	91, // 44: gramophile.StoredUser.user:type_name -> discogs.User
	92, // 45: gramophile.StoredUser.config:type_name -> gramophile.GramophileConfig
	93, // 46: gramophile.StoredUser.folders:type_name -> discogs.Folder
	94, // 47: gramophile.StoredUser.moves:type_name -> gramophile.FolderMove
	45, // 48: gramophile.UserLoginAttempts.attempts:type_name -> gramophile.UserLoginAttempt
	43, // 49: gramophile.GetLoginResponse.auth:type_name -> gramophile.GramophileAuth
	92, // 50: gramophile.SetConfigRequest.config:type_name -> gramophile.GramophileConfig
	12, // 51: gramophile.SetIntentRequest.intent:type_name -> gramophile.Intent
	59, // 52: gramophile.GetRecordRequest.get_record_with_issue:type_name -> gramophile.GetRecordWithIssue
	60, // 53: gramophile.GetRecordRequest.get_record_to_listen_to:type_name -> gramophile.GetRecordToListenTo
	58, // 54: gramophile.GetRecordRequest.get_record_with_id:type_name -> gramophile.GetRecordWithId
	9,  // 55: gramophile.RecordResponse.record:type_name -> gramophile.Record
	8,  // 56: gramophile.RecordResponse.updates:type_name -> gramophile.RecordUpdate
	10, // 57: gramophile.RecordResponse.sale_info:type_name -> gramophile.SaleInfo
	57, // 58: gramophile.GetRecordResponse.record_response:type_name -> gramophile.RecordResponse
	57, // 59: gramophile.GetRecordResponse.records:type_name -> gramophile.RecordResponse
	95, // 60: gramophile.GetOrgResponse.snapshot:type_name -> gramophile.OrganisationSnapshot
	0,  // 61: gramophile.AddWantlistRequest.type:type_name -> gramophile.WantlistType
	1,  // 62: gramophile.AddWantlistRequest.visibility:type_name -> gramophile.WantlistVisibility
	7,  // 63: gramophile.GetWantsResponse.wants:type_name -> gramophile.Want
	5,  // 64: gramophile.GetWantlistResponse.list:type_name -> gramophile.Wantlist
	42, // 65: gramophile.GetUserResponse.user:type_name -> gramophile.StoredUser
	42, // 66: gramophile.GetUsersResponse.users:type_name -> gramophile.StoredUser
	36, // 67: gramophile.QueueService.Enqueue:input_type -> gramophile.EnqueueRequest
	36, // 68: gramophile.QueueService.Execute:input_type -> gramophile.EnqueueRequest
	38, // 69: gramophile.QueueService.List:input_type -> gramophile.ListRequest
	40, // 70: gramophile.QueueService.Drain:input_type -> gramophile.DrainRequest
	46, // 71: gramophile.GramophileEService.GetURL:input_type -> gramophile.GetURLRequest
	48, // 72: gramophile.GramophileEService.GetLogin:input_type -> gramophile.GetLoginRequest
	80, // 73: gramophile.GramophileEService.GetUser:input_type -> gramophile.GetUserRequest
	50, // 74: gramophile.GramophileEService.GetState:input_type -> gramophile.GetStateRequest
	52, // 75: gramophile.GramophileEService.SetConfig:input_type -> gramophile.SetConfigRequest
	54, // 76: gramophile.GramophileEService.SetIntent:input_type -> gramophile.SetIntentRequest
	56, // 77: gramophile.GramophileEService.GetRecord:input_type -> gramophile.GetRecordRequest
	68, // 78: gramophile.GramophileEService.RefreshRecord:input_type -> gramophile.RefreshRecordRequest
	62, // 79: gramophile.GramophileEService.GetOrg:input_type -> gramophile.GetOrgRequest
	64, // 80: gramophile.GramophileEService.SetOrgSnapshot:input_type -> gramophile.SetOrgSnapshotRequest
	76, // 81: gramophile.GramophileEService.AddWant:input_type -> gramophile.AddWantRequest
	72, // 82: gramophile.GramophileEService.GetWants:input_type -> gramophile.GetWantsRequest
	74, // 83: gramophile.GramophileEService.DeleteWant:input_type -> gramophile.DeleteWantRequest
	66, // 84: gramophile.GramophileEService.AddWantlist:input_type -> gramophile.AddWantlistRequest
	78, // 85: gramophile.GramophileEService.GetWantlist:input_type -> gramophile.GetWantlistRequest
	70, // 86: gramophile.GramophileEService.UpdateWantlist:input_type -> gramophile.UpdateWantlistRequest
	82, // 87: gramophile.GramophileService.GetUsers:input_type -> gramophile.GetUsersRequest
	84, // 88: gramophile.GramophileService.DeleteUser:input_type -> gramophile.DeleteUserRequest
	86, // 89: gramophile.GramophileService.Clean:input_type -> gramophile.CleanRequest
	37, // 90: gramophile.QueueService.Enqueue:output_type -> gramophile.EnqueueResponse
	37, // 91: gramophile.QueueService.Execute:output_type -> gramophile.EnqueueResponse
	39, // 92: gramophile.QueueService.List:output_type -> gramophile.ListResponse
	41, // 93: gramophile.QueueService.Drain:output_type -> gramophile.DrainResponse
	47, // 94: gramophile.GramophileEService.GetURL:output_type -> gramophile.GetURLResponse
	49, // 95: gramophile.GramophileEService.GetLogin:output_type -> gramophile.GetLoginResponse
	81, // 96: gramophile.GramophileEService.GetUser:output_type -> gramophile.GetUserResponse
	51, // 97: gramophile.GramophileEService.GetState:output_type -> gramophile.GetStateResponse
	53, // 98: gramophile.GramophileEService.SetConfig:output_type -> gramophile.SetConfigResponse
	55, // 99: gramophile.GramophileEService.SetIntent:output_type -> gramophile.SetIntentResponse
	61, // 100: gramophile.GramophileEService.GetRecord:output_type -> gramophile.GetRecordResponse
	69, // 101: gramophile.GramophileEService.RefreshRecord:output_type -> gramophile.RefreshRecordResponse
	63, // 102: gramophile.GramophileEService.GetOrg:output_type -> gramophile.GetOrgResponse
	65, // 103: gramophile.GramophileEService.SetOrgSnapshot:output_type -> gramophile.SetOrgSnapshotResponse
	77, // 104: gramophile.GramophileEService.AddWant:output_type -> gramophile.AddWantResponse
	73, // 105: gramophile.GramophileEService.GetWants:output_type -> gramophile.GetWantsResponse
	75, // 106: gramophile.GramophileEService.DeleteWant:output_type -> gramophile.DeleteWantResponse
	67, // 107: gramophile.GramophileEService.AddWantlist:output_type -> gramophile.AddWantlistResponse
	79, // 108: gramophile.GramophileEService.GetWantlist:output_type -> gramophile.GetWantlistResponse
	71, // 109: gramophile.GramophileEService.UpdateWantlist:output_type -> gramophile.UpdateWantlistResponse
	83, // 110: gramophile.GramophileService.GetUsers:output_type -> gramophile.GetUsersResponse
	85, // 111: gramophile.GramophileService.DeleteUser:output_type -> gramophile.DeleteUserResponse
	87, // 112: gramophile.GramophileService.Clean:output_type -> gramophile.CleanResponse
	90, // [90:113] is the sub-list for method output_type
	67, // [67:90] is the sub-list for method input_type
	67, // [67:67] is the sub-list for extension type_name
	67, // [67:67] is the sub-list for extension extendee
	0,  // [0:67] is the sub-list for field type_name
}

func init() { file_gramophile_proto_init() }
func file_gramophile_proto_init() {
	if File_gramophile_proto != nil {
		return
	}
	file_config_proto_init()
	file_organisation_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gramophile_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wantlist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WantlistEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Want); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Intent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Queues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Queue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshWant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncWants); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshEarliestReleaseDates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshEarliestReleaseDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshWants); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshWantlists); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkSales); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshSales); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFolderUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshUpdates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshUserEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshCollectionEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanCollectionEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshIntents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoredUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GramophileAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginAttempts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginAttempt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetIntentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetIntentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordWithId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordWithIssue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordToListenTo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOrgSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOrgSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWantlistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWantlistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWantlistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWantlistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWantsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWantsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWantlistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWantlistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gramophile_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gramophile_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*QueueElement_RefreshUser)(nil),
		(*QueueElement_RefreshCollectionEntry)(nil),
		(*QueueElement_RefreshIntents)(nil),
		(*QueueElement_RefreshUpdates)(nil),
		(*QueueElement_AddFolderUpdate)(nil),
		(*QueueElement_RefreshSales)(nil),
		(*QueueElement_LinkSales)(nil),
		(*QueueElement_RefreshWantlists)(nil),
		(*QueueElement_AddWant)(nil),
		(*QueueElement_RefreshWants)(nil),
		(*QueueElement_UpdateSale)(nil),
		(*QueueElement_MoveRecords)(nil),
		(*QueueElement_MoveRecord)(nil),
		(*QueueElement_RefreshRelease)(nil),
		(*QueueElement_RefreshCollection)(nil),
		(*QueueElement_RefreshEarliestReleaseDates)(nil),
		(*QueueElement_RefreshEarliestReleaseDate)(nil),
		(*QueueElement_SyncWants)(nil),
		(*QueueElement_RefreshWant)(nil),
	}
	file_gramophile_proto_msgTypes[51].OneofWrappers = []interface{}{
		(*GetRecordRequest_GetRecordWithIssue)(nil),
		(*GetRecordRequest_GetRecordToListenTo)(nil),
		(*GetRecordRequest_GetRecordWithId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gramophile_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   83,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_gramophile_proto_goTypes,
		DependencyIndexes: file_gramophile_proto_depIdxs,
		EnumInfos:         file_gramophile_proto_enumTypes,
		MessageInfos:      file_gramophile_proto_msgTypes,
	}.Build()
	File_gramophile_proto = out.File
	file_gramophile_proto_rawDesc = nil
	file_gramophile_proto_goTypes = nil
	file_gramophile_proto_depIdxs = nil
}
