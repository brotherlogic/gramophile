syntax = "proto3";

package gramophile;

option go_package = "github.com/brotherlogic/gramophile/proto";

import "organisation.proto";
import "github.com/brotherlogic/discogs/proto/discogs.proto";

enum Basis {
    DISCOGS = 0;
    GRAMOPHILE = 1;
}

enum Mandate {
    NONE = 0;
    RECOMMENDED = 1;
    REQUIRED = 2;
}

enum Bool {
    UNKNOWN = 0;
    TRUE = 1;
    FALSE = 2;
}

message MoveCriteria {
    Bool has_sale_id = 1;
    discogs.SaleStatus sale_status = 2;
    Bool listened = 3; 
    Bool arrived = 4;
}

enum MoveState {
    ENABLED = 0;
    BLOCKED_BECAUSE_OF_LOOP = 1;
}

message FolderMove {
    string name = 1;
    MoveCriteria criteria = 2;
    string move_folder = 3;
    bool move_to_goal_folder = 4;
    Create origin = 5;
    MoveState move_state = 6;
}

message MoveQuota {
    repeated MoveHistory past_moves = 1;
}

message MoveHistory {
    string move = 1;
    int64 iid = 2;
    int64 time = 3;
}

message Filter {
    repeated string formats = 1;
    repeated int32 exclude_folder = 2;
    repeated int32 include_folder = 3;
}

enum MoveSource {
    USER_PROVIDED = 0;
    GRAM_PROVIDED = 1;
}

message Sleeve {
    string name = 1;
    float width_multiplier = 2;
}

message SleeveConfig {
    Mandate mandate = 1;
    repeated Sleeve allowed_sleeves = 2;
}

message CleaningConfig {
    Mandate cleaning = 1;
    Filter applies_to = 2;

    int64 cleaning_gap_in_seconds = 3;
    int32 cleaning_gap_in_plays = 4;
}

message ListenConfig {
    Mandate mandate = 1;
    repeated ListenFilter filters = 2;
}

message Order {
    enum Ordering {
      ORDER_RANDOM = 0;
      ORDER_ADDED_DATE = 1;
    }

    Ordering ordering = 1;
    bool reverse = 2;
}

message ListenFilter {
    string name = 1;
    Filter filter = 2;
    
    Order order = 3;
}

message GramophileConfig {
    Basis basis = 2;
    CleaningConfig cleaning_config = 1;
    ListenConfig listen_config = 3;
    WidthConfig width_config = 4;
    OrganisationConfig organisation_config = 5;
    WeightConfig weight_config = 6;
    GoalFolderConfig goal_folder_config = 7;
    SleeveConfig sleeve_config = 8;
    ArrivedConfig arrived_config = 9;
    SaleConfig sale_config = 10;
    KeepConfig keep_config = 11;

    Create create_folders = 12;
    Create create_moves = 13;

    repeated FolderMove moves = 14;
}

message WeightConfig {
    Mandate mandate = 1;
}

message WidthConfig {
    Mandate mandate = 1;
}

enum Create {
    MANUAL = 0;
    AUTOMATIC = 1;
}

message GoalFolderConfig {
    Mandate mandate = 1;
}

message ArrivedConfig {
    Mandate mandate = 1;
}

enum SaleUpdateType {
    NO_SALE_UPDATE = 0;
    MINIMAL_REDUCE = 1;

    // Reduce to the Median over the course of 1 month, then hold at median price
    REDUCE_TO_MEDIAN = 2;
}

// Setting this mandate will enable gramophile to support sale tracking / adjustment
message SaleConfig {
    Mandate mandate = 1;

    Mandate handle_price_updates = 2;
    int64 update_frequency_seconds = 3;
    SaleUpdateType update_type = 4;
}

message KeepConfig {
    Mandate mandate = 1;
}
